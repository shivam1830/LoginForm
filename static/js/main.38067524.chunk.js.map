{"version":3,"sources":["Components/LoginForm.js","Components/SignUp.js","Components/Nav.js","Components/ErrorPage.js","Components/HomePage.js","Components/ProtectedRoute.js","Components/users/AddUser.js","Components/users/EditUser.js","Components/Roles.js","Components/AddRoles.js","Components/EditRoles.js","Components/step-1.jsx","Components/step-3.jsx","Components/step-4.jsx","Components/Multi.jsx","Components/Stepmain.jsx","Components/Stepper.jsx","Components/Register.jsx","Components/dynamic-form.js","App.js","reportWebVitals.js","index.js"],"names":["Alert","props","elevation","variant","withRouter","Login","React","useState","notification","setNotification","detailsNotification","setDetailsNotification","success","setSuccess","handleSnackbar","event","reason","classes","makeStyles","theme","backdrop","zIndex","drawer","color","useStyles","open","setOpen","errorFieldEmail","setErrorFieldEmail","errorFieldPassword","setErrorFieldPassword","history","useHistory","adminUser","name","email","password","details","setDetails","setError","console","log","loggedIn","localStorage","getItem","to","Grid","Paper","style","backgroundColor","padding","height","width","margin","align","Avatar","onSubmit","e","preventDefault","setItem","setTimeout","window","location","reload","push","className","TextField","label","placeholder","id","onChange","target","value","fullWidth","error","helperText","type","Button","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","message","action","Fragment","onClick","severity","Backdrop","CircularProgress","root","backButton","marginRight","spacing","instructions","marginTop","marginBottom","SignUp","activeStep","setActiveStep","steps","formData","confirmpassword","phone","checkedA","gender","submitted","filterOptions","formObj","setFormObj","onCheckChange","checked","btn","setBtn","handleChange","ValidatorForm","addValidationRule","handleSubmit","newFormObj","prevActiveStep","Typography","gutterBottom","alternativeLabel","map","Step","StepLabel","length","stepIndex","noValidate","validators","errorMessages","FormControl","component","FormLabel","RadioGroup","display","FormControlLabel","control","Radio","ListItem","ListItemText","children","primary","secondary","Checkbox","getStepContent","disabled","Nav","link","textDecoration","AppBar","position","Toolbar","right","removeItem","ErrorPage","options","JSON","parse","chart","zoomType","xAxis","categories","tooltip","pointFormat","title","text","yAxis","series","data","users","setUsers","useEffect","loadUsers","noData","setNoData","a","axios","get","result","deleteUser","delete","btnDelete","btnEdit","TableContainer","TableHead","TableRow","TableCell","TableBody","user","index","scope","address","highcharts","Highcharts","ProtectedRoute","Component","rest","render","pathname","state","from","AddUser","setUser","onInputChange","post","multiline","rows","EditUser","useParams","loadUser","put","getLocalItems","Roles","show","popup","setPopup","newUsers","setNewUsers","sortData","setSortData","setRows","searchData","setSearchData","page","setPage","rowsPerPage","setRowsPerPage","setChecked","count","setCount","icon","setIcon","handleClose","stringify","PostData","deleteUsers","editItem","GridSearchColumn","GridSearchTypeEnum","handleOnSearch","searchData1","Data","SearchText","GridType","filter","item","IsMatched","forEach","element","i","undefined","toString","toLowerCase","indexOf","sort","b","localeCompare","Math","min","Dialog","DialogTitle","DialogContent","DialogContentText","DialogActions","autoFocus","filteredData","elem","autoComplete","prev","slice","description","permission","TablePagination","rowsPerPageOptions","backIconButtonProps","nextIconButtonProps","onPageChange","newPage","onRowsPerPageChange","parseInt","AddRoles","Date","getTime","oldData","EditRoles","editData","find","doc","updateUsers","findIndex","splice","StepOne","sendData","step1","TypoBox","borderBottom","flexWrap","formControl","unit","marginLeft","optionlabel","expandcontent","boxShadow","expandbuttonarea","paddingLeft","fontSize","minHeight","expanddetails","removebg","background","alignItems","dividerCom","flex","listitems","paddingTop","StepThree","PCName","PCJobTitle","PCEmailAddress","PCPhone","PCFax","SCName","SCJobTitle","SCEmailAddress","SCPhone","SCFax","StepFour","getNavStyles","indx","styles","getButtonsState","showSecondstep","showPreviousBtn","showSubmitBtn","showNextBtn","showCancelBtn","showFirststep","showHomeBtn","showThirdstep","ButtonContained","textTransform","palette","main","borderRadius","ButtonOutlined","MultiStep","setStyles","useRef","compState","setComp","buttonsState","setButtons","setStepState","nextBtn","setNextBtn","next","setFillFields","history2","fillFields","onKeyDown","evt","which","showNavigation","defaultProps","Stepper","Register","role","DynamicForm","setData","number","Dynamic","form","validation","minLength","labelName","App","exact","path","LoginForm","NewData","HomePage","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.38067524.chunk.js","sourcesContent":["import React from 'react';\r\nimport { useState } from 'react';\r\nimport { Avatar, Button, Grid, Paper, TextField } from '@material-ui/core';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport { Link, Redirect, withRouter } from 'react-router-dom';\r\n\r\n\r\nimport { useHistory } from 'react-router-dom';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\n\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\n\r\n\r\nfunction LoginForm({ Login }) {\r\n\r\n    const [notification, setNotification] = React.useState(false);\r\n    const [detailsNotification, setDetailsNotification] = React.useState(false);\r\n\r\n    const [success, setSuccess] = React.useState(false);\r\n\r\n    const handleSnackbar = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        setNotification(false);\r\n        setSuccess(false)\r\n        setDetailsNotification(false)\r\n    }\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        backdrop: {\r\n            zIndex: theme.zIndex.drawer + 1,\r\n            color: '#fff',\r\n        },\r\n    }));\r\n\r\n\r\n    const classes = useStyles();\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n    const [errorFieldEmail, setErrorFieldEmail] = React.useState(false);\r\n    const [errorFieldPassword, setErrorFieldPassword] = React.useState(false);\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n\r\n    const history = useHistory();\r\n\r\n    const adminUser = {\r\n        name: \"Shivam\",\r\n        email: \"shivam@gmail.com\",\r\n        password: \"shivam\"\r\n\r\n    };\r\n\r\n    const [details, setDetails] = useState({ name: \"\", email: \"\", password: \"\" });\r\n\r\n\r\n    // const [user, setUser] = useState({ name: \"\", email: \"\", password: \"\" });\r\n    const [error, setError] = useState(\"\");\r\n\r\n    const paperStyle = { backgroundColor: '#f6f6f6', padding: 20, height: '70vh', width: 280, margin: \"20px auto\" }\r\n    const avatarStyle = { backgroundColor: 'red' }\r\n\r\n\r\n    Login = details => {\r\n\r\n        if (details.email !== \"\") {\r\n            // setError(\"Enter Email\");\r\n            setError(\"\")\r\n            setErrorFieldEmail(false)\r\n        }\r\n\r\n        if (details.password !== \"\")\r\n        {   setError(\"\")\r\n            setErrorFieldPassword(false)\r\n        }\r\n\r\n        if (details.email === adminUser.email && details.password === adminUser.password) {\r\n            console.log(\"Logged In\");\r\n            setDetails({\r\n                name: details.name,\r\n                email: details.email,\r\n                password: details.password\r\n            });\r\n\r\n        }\r\n        else if (details.email === \"\" && details.password === \"\") {\r\n            setError(\"Please Enter Mandatory Fields\")\r\n            setNotification(true)\r\n            setErrorFieldEmail(false)\r\n            setErrorFieldPassword(false)\r\n        //    setErrorField(true)\r\n        }\r\n        else if (details.email === \"\") {\r\n            // setError(\"Enter Email\");\r\n            setErrorFieldEmail(true)\r\n        }\r\n       \r\n        else if (details.password === \"\") {\r\n            // setError(\"Enter Password\")\r\n            setErrorFieldPassword(true)\r\n        }\r\n       \r\n        else {\r\n            setDetailsNotification(true)\r\n            setError(\"Details do not Match\");\r\n        }\r\n\r\n      \r\n    }\r\n\r\n    // const token = localStorage.getItem(\"token\");\r\n\r\n    // var loggedIn = true;\r\n\r\n    // if (token == null) {\r\n    //     loggedIn = false\r\n    // }\r\n\r\n\r\n    const submitHandler = e => {\r\n        e.preventDefault();\r\n        Login(details);\r\n\r\n        if (details.email !== adminUser.email || details.password !== adminUser.password) {\r\n            // setNotification(true)\r\n            // console.log(success, open, notification);\r\n        }\r\n\r\n        if (details.email === adminUser.email && details.password === adminUser.password) {\r\n\r\n            localStorage.setItem(\"token\", \"abcd\");\r\n            setOpen(!open)\r\n            setTimeout(() => {\r\n                setSuccess(true);\r\n                console.log(success, open, notification);\r\n\r\n            }, 2000)\r\n            console.log(success, open, notification);\r\n            // // <Redirect to=\"/HomePage\"/>\r\n            window.location.reload();\r\n                history.push(\"/HomePage\")\r\n\r\n          \r\n\r\n            \r\n            \r\n            // window.location.reload();\r\n\r\n\r\n        }\r\n    }\r\n\r\n\r\n    const token = localStorage.getItem(\"token\");\r\n\r\n    var loggedIn = true;\r\n\r\n    if (token == null) {\r\n        loggedIn = false\r\n    }\r\n\r\n\r\n    if (loggedIn !== false) {\r\n        return <Redirect to=\"/HomePage\" />\r\n    }\r\n\r\n\r\n    return (\r\n\r\n        <>\r\n\r\n\r\n            {/* {(user.name !== \"\") ? (\r\n\r\n                <div className=\"welcome\">\r\n                    <Grid align='center'>\r\n                        <Paper elevation={10} style={paperStyle} >\r\n                            <Avatar style={avatarStyle} ><LockOpenOutlinedIcon /></Avatar>\r\n                            <h3>Logged In </h3>\r\n                            <h2>Hi, <span>{adminUser.name}</span> </h2>\r\n                            <Button color='primary' variant=\"contained\" onClick={Logout}>Logout</Button>\r\n                        </Paper>\r\n                    </Grid>\r\n                </div>\r\n\r\n            ) : ( */}\r\n            {/* {(loggedIn !== false ) ? (<Redirect to=\"/HomePage\" />) :} */}\r\n             <Grid>\r\n                <Paper elevation={10} style={paperStyle}>\r\n                    <Grid align='center'>\r\n                        <Avatar style={avatarStyle}><LockOutlinedIcon /></Avatar>\r\n                        <h2> Sign In </h2>\r\n                    </Grid>\r\n                    <form onSubmit={submitHandler} >\r\n\r\n                        <div className=\"form-inner\">\r\n                            {/* {(error !== \"\") ? (<div className=\"error\" style={{\r\n                                color : 'red'\r\n                            }}>{error}</div>) : \"\"} */}\r\n                            <div className=\"form-group\">\r\n                                <TextField label='Email' placeholder=\"Enter Email\" name=\"email\"\r\n\r\n                                    id=\"email\" onChange={e => setDetails({ ...details, email: e.target.value })} value={details.email} fullWidth\r\n                                    error = {errorFieldEmail}\r\n                                    helperText = {errorFieldEmail === true ? \"Please Enter Email\" : \"\"}\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <TextField label=\"Password\" placeholder=\"Enter Password\" type=\"password\" name=\"password\"\r\n                                    id=\"password\" onChange={e => setDetails({ ...details, password: e.target.value })} value={details.password} fullWidth\r\n                                    error = {errorFieldPassword}\r\n                                    helperText = {errorFieldPassword === true ? \"Please Enter Password\" : \"\"}\r\n                                />\r\n                            </div>\r\n                            <div>\r\n                                <br />\r\n                            </div>\r\n                            <div>\r\n                                <Button type='submit' color='primary' variant=\"contained\" fullWidth\r\n\r\n                                > Login </Button>\r\n                                 <Snackbar\r\n                    anchorOrigin={{\r\n                        vertical: 'top',\r\n                        horizontal: 'center'\r\n                    }}\r\n                    \r\n                    open={notification}\r\n                    autoHideDuration={3000}\r\n                    onClose={handleSnackbar}\r\n                    message='Error'\r\n                    action={\r\n                        <React.Fragment>\r\n                            <Button onClick={handleSnackbar}>Close</Button>\r\n                        </React.Fragment>\r\n                    } >\r\n                        <Alert onClose={handleSnackbar} severity=\"error\">\r\n                        Please Enter Mandatory Fields \r\n        </Alert>\r\n                        </Snackbar>\r\n                        <Snackbar\r\n                    anchorOrigin={{\r\n                        vertical: 'top',\r\n                        horizontal: 'center'\r\n                    }}\r\n                    open={detailsNotification}\r\n                    autoHideDuration={3000}\r\n                    onClose={handleSnackbar}\r\n                    message='Error'\r\n                    action={\r\n                        <React.Fragment>\r\n                            <Button onClick={handleSnackbar}>Close</Button>\r\n                        </React.Fragment>\r\n                    } >\r\n                        <Alert onClose={handleSnackbar} severity=\"warning\">\r\n                        Details do not Match\r\n        </Alert>\r\n                        </Snackbar>\r\n                                {/* <Snackbar\r\n                                    anchorOrigin={{\r\n                                        vertical: 'top',\r\n                                        horizontal: 'center'\r\n                                    }}\r\n                                    open={notification}\r\n                                    autoHideDuration={5000}\r\n                                    onClose={handleSnackbar}\r\n                                    message='Please Enter Mandatory Fields'\r\n                                    action={\r\n                                        <React.Fragment>\r\n                                            <Button onClick={handleSnackbar}>Close</Button>\r\n                                        </React.Fragment>\r\n                                    } /> */}\r\n                                <Snackbar\r\n                                    anchorOrigin={{\r\n                                        vertical: 'top',\r\n                                        horizontal: 'center'\r\n                                    }}\r\n                                    open={success}\r\n                                    autoHideDuration={5000}\r\n                                    onClose={handleSnackbar}\r\n                                    message='Success'\r\n                                    action={\r\n                                        <React.Fragment>\r\n                                            <Button onClick={handleSnackbar}\r\n                                            >Close</Button>\r\n                                        </React.Fragment>\r\n                                    } />\r\n                                <Backdrop className={classes.backdrop} open={open} onClick={handleClose}>\r\n                                    <CircularProgress color=\"inherit\" />\r\n                                </Backdrop>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </form>\r\n                    <br />\r\n                    <Link to=\"/SignUp\" ><span >Create an Account?...Sign Up</span></Link>\r\n\r\n                </Paper>\r\n            </Grid>\r\n            )\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default withRouter(LoginForm)\r\n","import { Grid, Paper, Typography, Avatar, Button, TextField } from '@material-ui/core';\r\nimport React from 'react';\r\nimport AddCircleOutlineOutlinedIcon from '@material-ui/icons/AddCircleOutlineOutlined';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport { Link, useHistory, Redirect } from 'react-router-dom';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport Stepper from '@material-ui/core/Stepper';\r\nimport Step from '@material-ui/core/Step';\r\nimport StepLabel from '@material-ui/core/StepLabel';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport EmailIcon from '@material-ui/icons/Email';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport PhoneIcon from '@material-ui/icons/Phone';\r\nimport WcIcon from '@material-ui/icons/Wc';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n    },\r\n    backButton: {\r\n        marginRight: theme.spacing(1),\r\n    },\r\n    instructions: {\r\n        marginTop: theme.spacing(1),\r\n        marginBottom: theme.spacing(1),\r\n    },\r\n    backdrop: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        color: '#fff',\r\n    },\r\n}));\r\n\r\nfunction getSteps() {\r\n    return ['',''];\r\n}\r\n\r\n\r\n\r\n\r\nexport const SignUp = () => {\r\n\r\n    const classes = useStyles();\r\n    const [activeStep, setActiveStep] = React.useState(0);\r\n    const steps = getSteps();\r\n\r\n    const handleNext = () => {\r\n        setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n        // localStorage.setItem('Data', JSON.stringify(formData))\r\n    };\r\n\r\n    const handleBack = () => {\r\n        setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n    };\r\n\r\n    const handleReset = () => {\r\n        setActiveStep(0);\r\n    };\r\n\r\n    // const step1 = JSON.parse(localStorage.getItem('Data'));\r\n\r\n\r\n\r\n    const paperStyle = { padding: '30px 20px ', width: 300, margin: \"20px auto\" }\r\n    const headerStyle = { margin: 0 }\r\n    const avatarStyle = { backgroundColor: 'green' }\r\n    const marginTop = { marginTop: 5 }\r\n    const [formObj, setFormObj] = React.useState({\r\n        formData: {\r\n            name: '',\r\n            email: '',\r\n            password: '',\r\n            confirmpassword: '',\r\n            phone: '',\r\n            checkedA: false,\r\n            gender: '',\r\n\r\n        },\r\n        submitted: false,\r\n        filterOptions: [],\r\n    });\r\n\r\n\r\n    const { formData } = formObj;\r\n    const [notification, setNotification] = React.useState(false);\r\n\r\n    const [success, setSuccess] = React.useState(false);\r\n\r\n    const handleSnackbar = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n\r\n        setNotification(false);\r\n        setSuccess(false)\r\n    }\r\n\r\n    const onCheckChange = (e) => {\r\n        // const { formData } = formObj;\r\n        formData[e.target.name] = e.target.checked;\r\n        setFormObj({ formData: formData });\r\n    }\r\n\r\n    const [btn, setBtn] = React.useState(true);\r\n\r\n    const handleChange = (event) => {\r\n        // console.log(\"event\", event.target.value);\r\n        // const { formData } = formObj;\r\n        formData[event.target.name] = event.target.value;\r\n        setFormObj({ formData: formData });\r\n        console.log(formData)\r\n        if (formData.name !== '' && formData.email !== '' && formData.phone !== '' && formData.password !== '' && formData.confirmpassword !== '') {\r\n            setBtn(false)\r\n        }\r\n        else {\r\n            setBtn(true)\r\n        }\r\n\r\n        ValidatorForm.addValidationRule('isPasswordMatch', (value) => {\r\n\r\n            if (value !== formData.password) {\r\n                return false;\r\n            }\r\n            return true;\r\n        });\r\n\r\n\r\n    }\r\n\r\n\r\n    // const useStyless = makeStyles((theme) => ({\r\n    //     backdrop: {\r\n    //         zIndex: theme.zIndex.drawer + 1,\r\n    //         color: '#fff',\r\n    //     },\r\n    // }));\r\n\r\n    // const classes = useStyless();\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const history = useHistory();\r\n\r\n    const handleSubmit = () => {\r\n\r\n        // debugger;\r\n        const newFormObj = { ...formObj, submitted: true };\r\n        setFormObj(newFormObj);\r\n        // , () => {\r\n        //     setTimeout(() => {\r\n        //         this.setFormObj({ submitted: false });\r\n        //         console.log(formData, formObj);\r\n        //     }, 5000);\r\n\r\n        // });\r\n        // console.log(formObj, newFormObj)\r\n\r\n        if ((formData.gender === 'male' || formData.gender === 'female') && (formData.checkedA === true)) {\r\n            setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n            setTimeout(() => {\r\n                setOpen(!open)\r\n            }, 1000)\r\n\r\n            setTimeout(() => {\r\n                setSuccess(true)\r\n            }, 3000)\r\n\r\n            setTimeout(() => {\r\n                history.push(\"/LoginForm\")\r\n            }, 4000)\r\n        }\r\n        else {\r\n            setNotification(true)\r\n        }\r\n\r\n\r\n\r\n\r\n\r\n\r\n        // console.log(newFormObj, open, formData, formObj);\r\n        // debugger;\r\n    }\r\n\r\n\r\n    // const useStyles = makeStyles((theme) => ({\r\n    //     root: {\r\n    //         '& .MuiTextField-root': {\r\n    //             margin: theme.spacing(1),\r\n    //             width: 200,\r\n    //         },\r\n    //     },\r\n    // }));\r\n\r\n\r\n\r\n    // const handleError = (e) => {\r\n    //     console.log(formObj.formData.name, e);\r\n    //     return false;\r\n    // }\r\n\r\n\r\n   \r\n\r\n    const token = localStorage.getItem(\"token\");\r\n\r\n    var loggedIn = true;\r\n\r\n    if (token == null) {\r\n        loggedIn = false\r\n    }\r\n\r\n\r\n    if (loggedIn !== false) {\r\n        return <Redirect to=\"/HomePage\" />\r\n    }\r\n\r\n\r\n\r\n    function getStepContent(stepIndex) {\r\n        switch (stepIndex) {\r\n            case 0:\r\n                return (\r\n                    <>\r\n                    \r\n                        <ValidatorForm\r\n                            onSubmit={handleSubmit}\r\n                            noValidate={true}\r\n                        >\r\n\r\n                            <TextValidator fullWidth name=\"name\" type=\"text\"\r\n                                id=\"name\"\r\n                                label=\"Name\"\r\n                                placeholder=\"Enter Name\"\r\n                                onChange={handleChange}\r\n                                value={formData.name}\r\n                                validators={['required']}\r\n                                errorMessages={['Required']}\r\n                                // defaultValue=\"\"\r\n                                helperText=\"Enter Name\"\r\n                                variant=\"outlined\"\r\n                            // inputProps={{\r\n                            //     // minLength: 2\r\n                            // }}\r\n                            />\r\n                            <TextValidator fullWidth name=\"email\" type=\"text\"\r\n                                id=\"email\"\r\n                                label=\"Email\"\r\n                                placeholder=\"Enter Email\"\r\n                                onChange={handleChange}\r\n                                value={formData.email}\r\n                                validators={['required', 'isEmail']}\r\n                                errorMessages={['Required', 'Enter Valid Email']}\r\n                                helperText=\"Enter Email\"\r\n                                variant=\"outlined\"\r\n\r\n                            />\r\n\r\n                            <FormControl component=\"fieldset\" style={marginTop}>\r\n                                <FormLabel component=\"legend\">Gender</FormLabel>\r\n                                <RadioGroup aria-label=\"gender\" name=\"gender\" onChange={handleChange} style={{ display: 'initial' }}>\r\n                                    <FormControlLabel value=\"female\" control={<Radio />} label=\"Female\" />\r\n                                    <FormControlLabel value=\"male\" control={<Radio />} label=\"Male\" />\r\n                                </RadioGroup>\r\n                            </FormControl>\r\n\r\n                            <TextValidator fullWidth name=\"phone\" type=\"number\"\r\n                                id=\"phone\"\r\n                                label=\"Phone Number\"\r\n                                placeholder=\"Enter Phone Number\"\r\n                                onChange={handleChange}\r\n                                value={formData.phone}\r\n                                validators={['required', 'matchRegexp:^[0-9]{10}$']}\r\n                                errorMessages={['Required', 'Enter 10 digit Phone number']}\r\n                                helperText=\"Enter Phone Number\"\r\n                                variant=\"outlined\"\r\n\r\n                            />\r\n\r\n                            <TextValidator fullWidth name=\"password\" type=\"password\"\r\n                                id=\"password\"\r\n                                label=\"Password\"\r\n                                placeholder=\"Enter Password\"\r\n                                onChange={handleChange}\r\n                                value={formData.password}\r\n                                validators={['required']}\r\n                                errorMessages={['Required']}\r\n                                helperText=\"Enter Password\"\r\n                                variant=\"outlined\"\r\n\r\n                            />\r\n\r\n                            <TextValidator fullWidth name=\"confirmpassword\" type=\"password\"\r\n                                id=\"confirmpassword\"\r\n                                label=\"Confirm Password\"\r\n                                placeholder=\"Enter Confirm Password\"\r\n                                onChange={handleChange}\r\n                                value={formData.confirmpassword}\r\n                                validators={['required', 'isPasswordMatch',]}\r\n                                errorMessages={['Required', 'Password Mismatch',]}\r\n                                helperText=\"Enter Confirm Password\"\r\n                                variant=\"outlined\"\r\n\r\n                            />\r\n\r\n\r\n\r\n\r\n                        </ValidatorForm>\r\n                    </>\r\n                );\r\n            case 1:\r\n                return (\r\n                    <>\r\n\r\n                        {\r\n                            <>\r\n                                <ListItem >\r\n                                    <ListItemText children={  <>\r\n                                        <ListItemText primary=\"Details\" align='center' />\r\n                                        <br />\r\n                                        <ListItemText primary={<AccountCircleIcon />} secondary={\"Name : \" + (formData.name || \"\")} />\r\n                                        <br />\r\n                                        <ListItemText primary={<EmailIcon />} secondary={\"Email : \" + (formData.email || \"\")} />\r\n                                        <br />\r\n                                        <ListItemText primary={<WcIcon />} secondary={\"Gender : \" + (formData.gender || \"\")} />\r\n                                        <br />\r\n                                        <ListItemText primary={<PhoneIcon />} secondary={\"Phone : \" + (formData.phone || \"\")} />\r\n                                        <br />\r\n                                    </>} />\r\n                                </ListItem>\r\n                            </>\r\n                        }\r\n\r\n                        {/* <ValidatorForm\r\n                onSubmit={handleSubmit}\r\n                noValidate={true}>\r\n                <Button type=\"Submit\" variant=\"contained\" color='primary'\r\n                        onChange={handleChange}\r\n                        disabled={btn}>Sign Up\r\n                    </Button>\r\n                </ValidatorForm> */}\r\n                        <FormControlLabel\r\n                            name=\"remember\"\r\n                            onChange={onCheckChange}\r\n                            checked={formData.checkedA}\r\n                            control={<Checkbox name=\"checkedA\"\r\n                            />}\r\n\r\n                            label=\"I accept the terms and conditions\" />\r\n                    </>\r\n                );\r\n\r\n            default:\r\n                return '';\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Grid >\r\n            <Paper elevation={20} style={paperStyle}>\r\n                <Grid align='center'>\r\n                    <Avatar style={avatarStyle}>\r\n                        <AddCircleOutlineOutlinedIcon />\r\n                    </Avatar>\r\n                    <h2 style={headerStyle} >Sign Up</h2>\r\n\r\n                    <Typography variant='caption' gutterBottom> Please fill this Form! </Typography>\r\n                    <div className={classes.root}>\r\n                        <Stepper activeStep={activeStep} alternativeLabel>\r\n                            {steps.map((label) => (\r\n                                <Step key={label}>\r\n                                    <StepLabel>{label}</StepLabel>\r\n                                </Step>\r\n                            ))}\r\n                        </Stepper>\r\n                    </div>\r\n                </Grid>\r\n                {console.log(formData)}\r\n\r\n                {/* <ValidatorForm\r\n                    onSubmit={handleSubmit}\r\n                    noValidate={true}\r\n                >\r\n\r\n                    <TextValidator fullWidth name=\"name\" type=\"text\"\r\n                        id=\"name\"\r\n                        label=\"Name\"\r\n                        placeholder=\"Enter Name\"\r\n                        onChange={handleChange}\r\n                        value={formData.name}\r\n                        validators={['required']}\r\n                        errorMessages={['Required']}\r\n                        // defaultValue=\"\"\r\n                        helperText=\"Enter Name\"\r\n                        variant=\"outlined\"\r\n                    // inputProps={{\r\n                    //     // minLength: 2\r\n                    // }}\r\n                    />\r\n                    <TextValidator fullWidth name=\"email\" type=\"text\"\r\n                        id=\"email\"\r\n                        label=\"Email\"\r\n                        placeholder=\"Enter Email\"\r\n                        onChange={handleChange}\r\n                        value={formData.email}\r\n                        validators={['required', 'isEmail']}\r\n                        errorMessages={['Required', 'Enter Valid Email']}\r\n                        helperText=\"Enter Email\"\r\n                        variant=\"outlined\"\r\n\r\n                    />\r\n\r\n                    <FormControl component=\"fieldset\" style={marginTop}>\r\n                        <FormLabel component=\"legend\">Gender</FormLabel>\r\n                        <RadioGroup aria-label=\"gender\" name=\"gender\" onChange={handleChange} style={{ display: 'initial' }}>\r\n                            <FormControlLabel value=\"female\" control={<Radio />} label=\"Female\" />\r\n                            <FormControlLabel value=\"male\" control={<Radio />} label=\"Male\" />\r\n                        </RadioGroup>\r\n                    </FormControl>\r\n\r\n                    <TextValidator fullWidth name=\"phone\" type=\"number\"\r\n                        id=\"phone\"\r\n                        label=\"Phone Number\"\r\n                        placeholder=\"Enter Phone Number\"\r\n                        onChange={handleChange}\r\n                        value={formData.phone}\r\n                        validators={['required', 'matchRegexp:^[0-9]{10}$']}\r\n                        errorMessages={['Required', 'Enter 10 digit Phone number']}\r\n                        helperText=\"Enter Phone Number\"\r\n                        variant=\"outlined\"\r\n\r\n                    />\r\n\r\n                    <TextValidator fullWidth name=\"password\" type=\"password\"\r\n                        id=\"password\"\r\n                        label=\"Password\"\r\n                        placeholder=\"Enter Password\"\r\n                        onChange={handleChange}\r\n                        value={formData.password}\r\n                        validators={['required']}\r\n                        errorMessages={['Required']}\r\n                        helperText=\"Enter Password\"\r\n                        variant=\"outlined\"\r\n\r\n                    />\r\n\r\n                    <TextValidator fullWidth name=\"confirmpassword\" type=\"password\"\r\n                        id=\"confirmpassword\"\r\n                        label=\"Confirm Password\"\r\n                        placeholder=\"Enter Confirm Password\"\r\n                        onChange={handleChange}\r\n                        value={formData.confirmpassword}\r\n                        validators={['required', 'isPasswordMatch',]}\r\n                        errorMessages={['Required', 'Password Mismatch',]}\r\n                        helperText=\"Enter Confirm Password\"\r\n                        variant=\"outlined\"\r\n\r\n                    />\r\n\r\n\r\n\r\n                    <FormControlLabel\r\n                        name=\"remember\"\r\n                        onChange={onCheckChange}\r\n                        checked={formData.checkedA}\r\n                        control={<Checkbox name=\"checkedA\"\r\n                        />}\r\n\r\n                        label=\"I accept the terms and conditions\" />\r\n\r\n                    <Button type=\"Submit\" variant=\"contained\" color='primary'\r\n                        onChange={handleChange}\r\n                        disabled={btn}>Sign Up\r\n                    </Button> */}\r\n\r\n                <Snackbar\r\n                    anchorOrigin={{\r\n                        vertical: 'top',\r\n                        horizontal: 'center'\r\n                    }}\r\n                    open={notification}\r\n                    autoHideDuration={1000}\r\n                    onClose={handleSnackbar}\r\n                    message='Error'\r\n                    action={\r\n                        <React.Fragment>\r\n                            <Button onClick={handleSnackbar}>Close</Button>\r\n                        </React.Fragment>\r\n                    } />\r\n                <Snackbar\r\n                    anchorOrigin={{\r\n                        vertical: 'top',\r\n                        horizontal: 'center'\r\n                    }}\r\n                    open={success}\r\n                    autoHideDuration={3000}\r\n                    onClose={handleSnackbar}\r\n                    message='Success'\r\n                    action={\r\n                        <React.Fragment>\r\n                            <Button onClick={handleSnackbar}>Close</Button>\r\n                        </React.Fragment>\r\n                    } />\r\n\r\n                <Backdrop className={classes.backdrop} open={open} onClick={handleClose}>\r\n                    <CircularProgress color=\"inherit\" />\r\n                </Backdrop>\r\n                {/* </ValidatorForm> */}\r\n\r\n\r\n                <br />\r\n\r\n                <div className={classes.root}>\r\n                    {/* <Stepper activeStep={activeStep} alternativeLabel>\r\n                        {steps.map((label) => (\r\n                            <Step key={label}>\r\n                                <StepLabel>{label}</StepLabel>\r\n                            </Step>\r\n                        ))}\r\n                    </Stepper> */}\r\n                    <div>\r\n                        {activeStep === steps.length ? (\r\n                            <div>\r\n                                <Typography className={classes.instructions} align='center'>All steps completed</Typography>\r\n\r\n                            </div>\r\n                        ) : (\r\n                            <div>\r\n                                <Typography className={classes.instructions}>{getStepContent(activeStep)}</Typography>\r\n                                <div align=''>\r\n                                    <Button\r\n                                        disabled={activeStep === 0}\r\n                                        onClick={handleBack}\r\n                                        className={classes.backButton}\r\n                                    >\r\n                                        Back\r\n                                    </Button>\r\n                                    {activeStep === steps.length - 1 ? (\r\n\r\n                                        <Button type=\"Submit\" variant=\"contained\" color='primary'\r\n                                            onClick={handleSubmit}\r\n                                            \r\n                                            disabled={btn}>{activeStep === 1 ? 'Submit' : ''}\r\n                                        </Button>\r\n                                    ) : (<Button variant=\"contained\" color=\"primary\" onClick={handleNext} \r\n                                        disabled={btn}>\r\n                                        {activeStep === 0 ? 'Next' : ''}\r\n                                    </Button>)}\r\n                                </div>\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n\r\n                <br />\r\n\r\n                <Link to=\"/LoginForm\" ><span>Already Have a Account?...</span> Log In</Link>\r\n\r\n            </Paper>\r\n        </Grid>\r\n\r\n    );\r\n\r\n}\r\n\r\n\r\nexport default SignUp;\r\n","import React from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\n// import Typography from '@material-ui/core/Typography';\r\nimport {Button} from '@material-ui/core'\r\nimport { Link, useHistory } from 'react-router-dom';\r\n\r\nfunction Nav () {\r\n\r\n  const link={\r\n    color : 'white',\r\n    textDecoration : 'none'\r\n    \r\n  }\r\n\r\n\r\n\r\nconst token = localStorage.getItem(\"token\");\r\n\r\n\r\nvar loggedIn = true;\r\n\r\nif (token == null) {\r\n    loggedIn = false\r\n}\r\n\r\nconst history = useHistory();\r\nconst Logout = () => {\r\n  localStorage.removeItem(\"token\");\r\n  history.push(\"/LoginForm\");\r\n   window.location.reload();\r\n \r\n  // <Redirect to=\"/LoginForm\"/>\r\n  // window.location.reload();\r\n\r\n}\r\n\r\n    return(\r\n        <div fullWidth>\r\n<AppBar position=\"static\" fullWidth>\r\n  \r\n  <Toolbar>\r\n    {/* <Typography variant=\"h6\" >\r\n      Welcome &nbsp;\r\n    </Typography>\r\n    <Link to=\"/LoginForm\" style={link}>Login &nbsp;</Link>\r\n    <h2>&nbsp;</h2>\r\n    <Link to=\"/SignUp\" style={link}>Sign Up &nbsp;</Link> */}\r\n{\r\n\r\nloggedIn ? <>\r\n  <Link to=\"/HomePage\" style={link}>Homepage &nbsp;</Link>\r\n  <Link to=\"/Roles\" style={link}>Roles &nbsp;</Link>\r\n  \r\n  <Button color=\"secondary\" style={{position : 'absolute', right : 1}} onClick={Logout}>Logout</Button>\r\n\r\n  \r\n  </>\r\n  :\r\n  <>\r\n  <Link to=\"/LoginForm\" style={link}>Login &nbsp;</Link>\r\n  {/* <Link to=\"/SignUp\" style={link}>Sign Up &nbsp;</Link> */}\r\n  <Link to=\"/Register\" style={link}>Register&nbsp;</Link>\r\n  <Link to=\"/dynamic-form\" style={link}>Form &nbsp;</Link>\r\n\r\n  </> \r\n}\r\n\r\n\r\n  </Toolbar>\r\n</AppBar>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\n\r\n\r\n\r\nexport default Nav;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nexport default function ErrorPage() {\r\n    return (\r\n        <div>\r\n            <p >404 Error!</p>\r\n            <Link to=\"/LoginForm\">Go Back</Link>\r\n        </div>\r\n    )\r\n}\r\n","import { React, useState, useEffect } from 'react'\r\n\r\nimport { Button,Grid,Paper } from '@material-ui/core';\r\n\r\nimport axios from 'axios';\r\n\r\nimport { useHistory, withRouter, Redirect, Link } from 'react-router-dom';\r\n\r\n\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport { render } from 'react-dom'\r\nimport Highcharts, { seriesType } from 'highcharts'\r\nimport HighchartsReact from 'highcharts-react-official'\r\nconst oldData = JSON.parse(localStorage.getItem('Details'))\r\nconst options = {\r\n    chart:{\r\n        type : 'column',\r\n        zoomType : 'xy'\r\n    },\r\n    xAxis:{\r\n        \r\n        categories : ['Apple','Banana','Orange'],\r\n    },\r\n    tooltip:{\r\n        pointFormat : 'value : {point.y:.2f} <b>mm</b>',\r\n    },\r\n    title: {\r\n      text: 'Data'\r\n    },\r\n    yAxis:{\r\n        categories:['TV','Fridge']\r\n    },\r\n    series: [{\r\n        name : 'My only Books',\r\n        data : [3,4,7,1,2,1]\r\n    },\r\n    {\r\n      name : 'My Cars',\r\n      data: [1,2,1,9,7,3]\r\n    }\r\n]\r\n  }\r\n\r\nfunction HomePage() {\r\n\r\n    const [users, setUsers] = useState([]);\r\n   \r\n    useEffect(() => {\r\n        loadUsers();\r\n    },[]);\r\n    const [noData,setNoData] = useState(false);\r\n    const loadUsers = async () => {\r\n        const result = await axios.get(\"http://localhost:3003/users\");\r\n        if(!result)\r\n        {\r\n            setNoData(true)\r\n        }\r\n        setUsers(result.data);\r\n    };\r\n\r\n    \r\n\r\n    const adminUser = {\r\n        name: \"Shivam\",\r\n        email: \"shivam@gmail.com\",\r\n        password: \"shivam\"\r\n    };\r\n\r\n    const history = useHistory()\r\n\r\n    // const Logout = () => {\r\n    //     localStorage.removeItem(\"token\");\r\n    //     history.push(\"/LoginForm\");\r\n    //     // <Redirect to=\"/LoginForm\"/>\r\n    //     // window.location.reload();\r\n\r\n    // }\r\n\r\n    const deleteUser = async id => {\r\n        await axios.delete(`http://localhost:3003/users/${id}`);\r\n        loadUsers();\r\n    }\r\n\r\n    // const paperStyle = { backgroundColor: '#f6f6f6', padding: 20, height: '70vh', width: 280, margin: \"20px auto\" }\r\n    // const avatarStyle = { backgroundColor: 'red' }\r\n\r\n    const token = localStorage.getItem(\"token\");\r\n\r\n    var loggedIn = true;\r\n\r\n    if (token == null) {\r\n        loggedIn = false\r\n    }\r\n\r\n    if (loggedIn === false) {\r\n        return <Redirect to=\"/\" />\r\n    }\r\n\r\n    const btnAdd= () => {\r\n      history.push(\"/users/AddUser\");\r\n        \r\n    }\r\n\r\n    const btnDelete = {\r\n        textDecoration: \"none\",\r\n        color: \"red\",\r\n    }\r\n\r\n    const btnEdit = {\r\n        textDecoration: \"none\",\r\n        color: \"green\",\r\n    }\r\n\r\n   \r\n    const paperStyle = { backgroundColor: '#f6f6f6', padding: '50px 50px', width: 800, margin: \"20px auto\" }\r\n\r\n    return (\r\n               <>\r\n        <h2>Hi, <span>{adminUser.name}</span> </h2>\r\n                <Grid align=\"center\">\r\n                \r\n                \r\n        <Paper elevation={20} style={paperStyle}>\r\n            {/* <Grid align=\"left\" >\r\n            <Link to ={'Roles'}  ><span >Go To Roles</span></Link>\r\n            </Grid>\r\n         */}\r\n                    \r\n                    {/* <Button color=\"primary\" variant=\"contained\" className=\"btnAdd\" align=\"right\" onClick={btnAdd} >Add User</Button> */}\r\n                    <br/>\r\n\r\n                    <TableContainer className=\"table border shadow\">\r\n                    \r\n                     <h3>USER DETAILS</h3>\r\n            \r\n                        <TableHead className=\"thread-dark\">\r\n                        \r\n                            <TableRow>\r\n                                \r\n                                <TableCell align=\"center\">S.No.</TableCell>\r\n                                <TableCell align=\"center\">Name</TableCell>\r\n                                <TableCell align=\"center\">Phone</TableCell>\r\n                                <TableCell align=\"center\">Address</TableCell>\r\n                                <TableCell align=\"center\">Action</TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                        {(noData !== false) ? <p>No Data Found</p> : noData === false}\r\n                            {\r\n                                users.map((user, index) => (\r\n                                    <TableRow key={user.id}>\r\n                                        <TableCell align=\"center\" scope=\"row\">{index + 1}</TableCell>\r\n                                        <TableCell align=\"center\">{user.name}</TableCell>\r\n                                        <TableCell align=\"center\">{user.phone}</TableCell>\r\n                                        <TableCell align=\"center\">{user.address}</TableCell>\r\n                                        <TableCell align=\"center\">\r\n                                            <Link className=\"btnEdit\" to={`users/EditUser/${user.id}`} style={btnEdit} ><EditIcon/></Link>\r\n                                            <br />\r\n                                            <Button className=\"btnDelete\" onClick={() => deleteUser(user.id)} style={btnDelete} ><DeleteForeverIcon/></Button>\r\n                                        </TableCell>\r\n\r\n                                    </TableRow>\r\n                                ))\r\n                            }\r\n\r\n                        </TableBody>\r\n                        <Button color=\"primary\" variant=\"contained\" className=\"btnAdd\" align=\"right\" onClick={btnAdd} >Add User</Button>\r\n                        {/* <Button color='primary' variant=\"contained\" onClick={Logout}>Logout</Button> */}\r\n                    </TableContainer>\r\n\r\n                    <div>\r\n  <HighchartsReact\r\n    highcharts={Highcharts}\r\n    options={options}\r\n  />\r\n</div>\r\n\r\n                    </Paper>\r\n            </Grid>\r\n\r\n                   \r\n\r\n         \r\n            \r\n        </>\r\n        \r\n\r\n    )\r\n}\r\n\r\nexport default withRouter(HomePage);","import React from 'react';\r\nimport { Redirect, Route } from 'react-router-dom'\r\n\r\nfunction ProtectedRoute({ component: Component, ...rest}) {\r\n    return (\r\n        <Route {...rest} render={(props) => {\r\n            if (localStorage.getItem(\"token\"))\r\n            {\r\n                return (<Component {...props}/>);\r\n            }\r\n            else if(!localStorage.getItem(\"token\"))\r\n            {\r\n                return(\r\n                    <Redirect to={{pathname : '/', state : {from : props.location}} }/>\r\n                ) ;\r\n            }          \r\n        }\r\n        }\r\n        />\r\n    );\r\n}\r\n\r\nexport default ProtectedRoute;\r\n","import React, { useState } from 'react'\r\nimport axios from 'axios';\r\nimport { useHistory, Redirect } from 'react-router-dom';\r\n\r\nimport { Avatar, Button, Grid, Paper } from \"@material-ui/core\";\r\nimport { TextValidator, ValidatorForm } from 'react-material-ui-form-validator';\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\n\r\n\r\nconst AddUser = () => {\r\n\r\n\r\n\r\n  let history = useHistory();\r\n  const [user, setUser] = useState({\r\n    name: \"\",\r\n    phone: \"\",\r\n    address: \"\"\r\n  });\r\n\r\n  // useEffect(() => {\r\n  //   localStorage.setItem('Details', JSON.stringify(user));\r\n  // }, [user]);\r\n\r\n  const { name, address, phone } = user;\r\n\r\n  const onInputChange = e => {\r\n    setUser({ ...user, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const onSubmit = async e => {\r\n    e.preventDefault();\r\n    await axios.post(\"http://localhost:3003/users\", user);\r\n    localStorage.getItem('Details');\r\n    history.push(\"/HomePage\");\r\n  };\r\n\r\n  const token = localStorage.getItem(\"token\");\r\n\r\n  var loggedIn = true;\r\n\r\n  if (token == null) {\r\n    loggedIn = false\r\n  }\r\n\r\n  if (loggedIn === false) {\r\n    return <Redirect to=\"/\" />\r\n  }\r\n\r\n  const btnCancel = () => {\r\n    history.push(\"/HomePage\");\r\n  }\r\n\r\n  const btnButton = {\r\n    color: \"red\",\r\n  }\r\n\r\n\r\n\r\n  const paperStyle = { backgroundColor: '#f6f6f6', padding: 20, height: '70vh', width: 280, margin: \"20px auto\" }\r\n  const avatarStyle = { backgroundColor: 'green' }\r\n  return (\r\n    <div className=\"container\" align=\"center\">\r\n      <div className=\"auto \">\r\n        <Grid>\r\n          <Paper elevation={10} style={paperStyle}>\r\n          <Grid align='center'>\r\n                        <Avatar style={avatarStyle}><AddCircleIcon /></Avatar>\r\n                    </Grid>\r\n            <h2 className=\"text\">ADD USER</h2>\r\n            <ValidatorForm onSubmit={e => onSubmit(e)} noValidate={true}>\r\n              <div className=\"form\">\r\n                <TextValidator\r\n                  fullWidth\r\n                  label=\"Name\"\r\n                  type=\"text\"\r\n                  validators={['required']}\r\n                  errorMessages={['Required']}\r\n                  className=\"form\"\r\n                  placeholder=\"Enter Your Name\"\r\n                  name=\"name\"\r\n                  value={name}\r\n                  onChange={e => onInputChange(e)}\r\n                />\r\n\r\n              </div>\r\n              <br />\r\n              <div className=\"form\">\r\n\r\n                <TextValidator\r\n                  fullWidth\r\n                  type=\"number\"\r\n                  label=\"Phone Number\"\r\n                  className=\"form\"\r\n                  validators={['required', 'matchRegexp:^[0-9]{10}$']}\r\n                  errorMessages={['Required', 'Enter 10 digit Phone number']}\r\n                  placeholder=\"Enter Your Phone Number\"\r\n                  name=\"phone\"\r\n                  value={phone}\r\n                  onChange={e => onInputChange(e)}\r\n                />\r\n\r\n              </div>\r\n              <br />\r\n              <div className=\"form\">\r\n                <TextValidator\r\n                  fullWidth\r\n                  id=\"standard-multiline-static\"\r\n                  label=\"Address\"\r\n                  multiline\r\n                  rows={4}\r\n                  type=\"text\"\r\n                  validators={['required']}\r\n                  errorMessages={['Required']}\r\n                  className=\"form\"\r\n                  placeholder=\"Enter Address\"\r\n                  name=\"address\"\r\n                  value={address}\r\n                  onChange={e => onInputChange(e)}\r\n                />\r\n              </div>\r\n              <br />\r\n              <Button type='submit' color='primary' variant=\"contained\" className=\"btn\" >Save</Button>\r\n              <Button onClick={btnCancel} style={btnButton}>Cancel</Button>\r\n\r\n            </ValidatorForm>\r\n\r\n          </Paper>\r\n        </Grid>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AddUser;","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useHistory, useParams, Redirect } from \"react-router-dom\";\r\nimport { Avatar, Button, Grid, Paper } from \"@material-ui/core\";\r\nimport { TextValidator, ValidatorForm } from 'react-material-ui-form-validator';\r\n\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nconst EditUser = () => {\r\n\r\n\r\n    let history = useHistory();\r\n    const { id } = useParams();\r\n    const [user, setUser] = useState({\r\n        name: \"\",\r\n        phone: \"\",\r\n        address: \"\"\r\n    });\r\n\r\n    const { name, address, phone } = user;\r\n\r\n    const onInputChange = e => {\r\n        setUser({ ...user, [e.target.name]: e.target.value });\r\n    };\r\n\r\n    \r\n    useEffect(() => {\r\n        loadUser();\r\n    },[]);\r\n\r\n\r\n\r\n    const onSubmit = async e => {\r\n        e.preventDefault();\r\n        await axios.put(`http://localhost:3003/users/${id}`, user);\r\n        history.push(\"/Homepage\");\r\n    };\r\n\r\n    const loadUser = async () => {\r\n        const result = await axios.get(`http://localhost:3003/users/${id}`);\r\n        setUser(result.data);\r\n    };\r\n\r\n    const token = localStorage.getItem(\"token\");\r\n\r\n    var loggedIn = true;\r\n\r\n    if (token == null) {\r\n        loggedIn = false\r\n    }\r\n\r\n    if (loggedIn === false) {\r\n        return <Redirect to=\"/\" />\r\n    }\r\n\r\n    const btnCancel = () => {\r\n        history.push(\"/HomePage\")\r\n    }\r\n\r\n    const btnButton = {\r\n        color: \"red\",\r\n    }\r\n\r\n    const paperStyle = { backgroundColor: '#f6f6f6', padding: 20, height: '70vh', width: 280, margin: \"20px auto\" }\r\n    const avatarStyle = { backgroundColor: 'green' }\r\n\r\n    return (\r\n        <div className=\"container\" align=\"center\">\r\n            <div className=\"auto \">\r\n                <Grid>\r\n                    <Paper elevation={10} style={paperStyle}>\r\n                    <Grid align='center'>\r\n                        <Avatar style={avatarStyle}><EditIcon /></Avatar>\r\n                    </Grid>\r\n                        <h2 className=\"text\">EDIT USER</h2>\r\n                        <ValidatorForm onSubmit={e => onSubmit(e)} noValidate={true}>\r\n                            <div className=\"form\">\r\n                                <TextValidator\r\n                                    fullWidth\r\n                                    type=\"text\"\r\n                                    className=\"control\"\r\n                                    placeholder=\"Enter Your Name\"\r\n                                    name=\"name\"\r\n                                    validators={['required']}\r\n                                    errorMessages={['Required']}\r\n                                    label=\"Name\"\r\n                                    value={name}\r\n                                    onChange={e => onInputChange(e)}\r\n                                />\r\n                            </div>\r\n                            <br />\r\n                            <div className=\"form\">\r\n                                <TextValidator\r\n                                    fullWidth\r\n                                    className=\"form\"\r\n                                    placeholder=\"Enter Your Phone Number\"\r\n                                    name=\"phone\"\r\n                                    validators={['required', 'matchRegexp:^[0-9]{10}$']}\r\n                                    errorMessages={['Required', 'Enter 10 digit Phone number']}\r\n                                    label=\"Phone Number\"\r\n                                    type=\"number\"\r\n                                    value={phone}\r\n                                    onChange={e => onInputChange(e)}\r\n                                />\r\n                            </div>\r\n                            <br />\r\n                            <div className=\"form1\">\r\n                                <TextValidator\r\n                                    fullWidth\r\n                                    id=\"standard-multiline-static\"\r\n                                    label=\"Address\"\r\n                                    multiline\r\n                                    rows={4}\r\n                                    validators={['required']}\r\n                                    errorMessages={['Required']}\r\n                                    type=\"text\"\r\n                                    className=\"form\"\r\n                                    placeholder=\"Enter Address\"\r\n                                    name=\"address\"\r\n                                    value={address}\r\n                                    onChange={e => onInputChange(e)}\r\n                                />\r\n                            </div>\r\n                            <br />\r\n                            <Button color='primary' variant=\"contained\" type=\"submit\" className=\"btn \" >Update</Button>\r\n                            <Button onClick={btnCancel} style={btnButton} >Cancel</Button>\r\n\r\n                        </ValidatorForm>\r\n                    </Paper>\r\n                </Grid>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default EditUser;\r\n","import { React, useState, useEffect } from 'react'\r\n\r\nimport { Button, Grid, Paper,TextField } from '@material-ui/core';\r\n\r\n// import axios from 'axios';\r\n// import TableSortLabel from '@material-ui/core/TableSortLabel';\r\n\r\nimport { useHistory, Redirect } from 'react-router-dom';\r\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\r\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport PostData from '../Data/posts.json'\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n// import SearchIcon from '@material-ui/icons/Search';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport './Button.css'\r\n// import { getByDisplayValue } from '@testing-library/react';\r\n// import { set } from 'lodash';\r\n\r\n\r\n// import { ContactlessTwoTone } from '@material-ui/icons';\r\n\r\n\r\n\r\nconst getLocalItems = () => {\r\n    let details = localStorage.getItem('Details');\r\n    if (details) {\r\n        return JSON.parse(localStorage.getItem('Details'))\r\n    }\r\n    else if (details === null) {\r\n        return [];\r\n    }\r\n}\r\n\r\n\r\n\r\n// function desc(a, b, orderBy) {\r\n//     if (b[orderBy] < a[orderBy]) {\r\n//         return -1;\r\n//     }\r\n//     if (b[orderBy] > a[orderBy]) {\r\n//         return 1;\r\n//     }\r\n//     return 0;\r\n\r\n//     // var formattedA;\r\n//     // var formattedB;\r\n\r\n//     // if (orderBy !== \"primaryPhone\") {\r\n//     //     formattedA = a[orderBy] ? a[orderBy].toLocaleLowerCase() : a[orderBy];\r\n//     //     formattedB = b[orderBy] ? b[orderBy].toLocaleLowerCase() : b[orderBy];\r\n//     // } else {\r\n//     //     formattedA = a[orderBy];\r\n//     //     formattedB = b[orderBy];\r\n//     // }\r\n\r\n//     // if (formattedB < formattedA) {\r\n//     //     return -1;\r\n//     // }\r\n//     // if (formattedB > formattedA) {\r\n//     //     return 1;\r\n//     // }\r\n\r\n//     // return 0;\r\n// }\r\n\r\n// function stableSort(array, cmp) {\r\n//     //debugger\r\n//     const stabilizedThis = array.map((el, index) => [el, index]);\r\n//     stabilizedThis.sort((a, b) => {\r\n//         const order = cmp(a[0], b[0]);\r\n//         if (order !== 0) return order;\r\n//         return a[1] - b[1];\r\n//     });\r\n//     return stabilizedThis.map(el => el[0]);\r\n// }\r\n\r\n// function getSorting(order, orderBy) {\r\n//     return order === 'desc' ? (a, b) => desc(a, b, orderBy) : (a, b) => -desc(a, b, orderBy);\r\n// }\r\n\r\n// const headCells = [\r\n//     { id: 'name', numeric: false, disablePadding: false, label: 'Role Name' },\r\n//     // // { id: 'CusNo', numeric: false, disablePadding: false, label: 'Customer No' },\r\n//     // { id: 'primaryContactName', numeric: false, disablePadding: false, label: 'Primary Contact Name' },\r\n//     { id: 'permission', numeric: false, disablePadding: false, label: 'Role Permission' },\r\n//     // { id: 'primaryPhone', numeric: false, disablePadding: false, label: 'Contact Number' },\r\n//     // { id: 'status', numeric: false, disablePadding: false, label: 'Status' },\r\n//     // { id: 'Action', numeric: false, disablePadding: false, label: '' },\r\n// ];\r\n\r\n// function EnhancedTableHead(props) {\r\n//     const { classes, order, orderBy, onRequestSort } = props;\r\n//     const createSortHandler = property => event => {\r\n//         onRequestSort(event, property);\r\n//     };\r\n\r\n//     return (\r\n//         <TableHead>\r\n//             <TableRow>\r\n//                 {headCells.map(headCell => (\r\n//                     <TableCell\r\n//                         key={headCell.id}\r\n//                         align={headCell.numeric ? 'right' : 'left'}\r\n//                         padding={headCell.disablePadding ? 'none' : 'default'}\r\n//                         sortDirection={orderBy === headCell.id ? order : false}\r\n//                     >\r\n//                         <TableSortLabel\r\n//                             active={orderBy === headCell.id}\r\n//                             direction={order}\r\n//                             onClick={createSortHandler(headCell.id)}\r\n//                         >\r\n//                             {headCell.label}\r\n//                             {orderBy === headCell.id ? (\r\n//                                 <span className={classes.visuallyHidden}>\r\n//                                     {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n//                                 </span>\r\n//                             ) : null}\r\n//                         </TableSortLabel>\r\n//                     </TableCell>\r\n//                 ))}\r\n//             </TableRow>\r\n//         </TableHead>\r\n//     );\r\n// }\r\n\r\n// EnhancedTableHead.propTypes = {\r\n//     classes: PropTypes.object.isRequired,\r\n//     numSelected: PropTypes.number.isRequired,\r\n//     onRequestSort: PropTypes.func.isRequired,\r\n//     onSelectAllClick: PropTypes.func.isRequired,\r\n//     order: PropTypes.oneOf(['asc', 'desc']).isRequired,\r\n//     orderBy: PropTypes.string.isRequired,\r\n//     rowCount: PropTypes.number.isRequired,\r\n// };\r\n\r\n\r\n\r\n// function Transition(props) {\r\n//     return <Slide direction=\"up\" {...props} />;\r\n// }\r\n\r\n\r\n\r\n\r\nconst Roles = () => {\r\n\r\n    // const adminUser = {\r\n    //     name: \"Shivam\",\r\n    //     email: \"shivam@gmail.com\",\r\n    //     password: \"shivam\"\r\n    // };\r\n    const [open, setOpen] = useState(false);\r\n\r\n    const [popup, setPopup] = useState({\r\n        show: false,\r\n        id: null\r\n    });\r\n\r\n    // const [inputData, setInputData] = useState({\r\n    //     id: \"\",\r\n    //     name: \"\",\r\n    //     description: \"\",\r\n    //     permission: \"\"\r\n    // });\r\n\r\n\r\n    // const [isEditItem, setIsEditItem] = useState(null);\r\n\r\n    const [users, setUsers] = useState(getLocalItems())\r\n    const [newUsers,setNewUsers] = useState(getLocalItems())\r\n    const [noData,setNoData] = useState(false);\r\n    // const [filteredUsers,setFilteredUsers] = useState([]);\r\n    const [sortData, setSortData] = useState('');\r\n\r\n    const [rows, setRows] = useState([]);\r\n    const [searchData, setSearchData] = useState([]);\r\n    // const [loading, setLoading] = useState();\r\n    // const [fullWidth, setFullWidth] = useState(true);\r\n    // const [maxWidth, setMaxWidth] = useState('md');\r\n    // const [order, setOrder] = useState('asc');\r\n    // const [orderBy, setOrderBy] = useState('');// React.useState('userName');\r\n    const [selected, setSelected] = useState([]);\r\n    const [page, setPage] = useState(0);\r\n    const [dense, setDense] = useState(false);\r\n    const [rowsPerPage, setRowsPerPage] = useState(10);\r\n    const [viewDetailsPopup, setviewDetailsPopup] = useState(false);\r\n    const [guestData, setGuestData] = useState({});\r\n    const [popupprop, setPopupprop] = useState(false);\r\n\r\n    // const [perPage, setPerPage] = useState(5);\r\n    // const [offset, setOffset] = useState(0);\r\n    // const [tableData, setTableData] = useState([]);\r\n    // const [orgTableData, setorgTableData] = useState([]);\r\n    // const [currentPage, setCurrentPage] = useState(0);\r\n\r\n    const [toggle ,setToggle] = useState(false)\r\n    const [checked, setChecked] = useState(false);\r\n    const [count , setCount] = useState(0)\r\n    const [icon,setIcon] = useState(true);\r\n    const [over,setOver] = useState(false);\r\n\r\n\r\n\r\n\r\n    const history = useHistory();\r\n\r\n    \r\n\r\n\r\n    // const handleClickOpen = () => {\r\n    //     setOpen(true);\r\n    // };\r\n\r\n    const handleClose = () => {\r\n        setPopup({\r\n            show: false,\r\n            id: null\r\n        });\r\n        setOpen(false)\r\n    };\r\n\r\n\r\n\r\n    const btnAdd = () => {\r\n        history.push(\"/AddRoles\");\r\n    }\r\n\r\n    const btnDelete = {\r\n        textDecoration: \"none\",\r\n        color: \"red\",\r\n    }\r\n\r\n    // const oldData = JSON.parse(localStorage.getItem('Details'))\r\n\r\n\r\n    useEffect(() => {\r\n        // loadUsers();\r\n        // getLocalItems()\r\n        // console.log(getLocalItems().length)\r\n\r\n        // console.log(users)\r\n        // console.log(getLocalItems().length)\r\n        if (getLocalItems().length <= 0) {\r\n            // users.push(PostData)\r\n            localStorage.setItem('Details', JSON.stringify(PostData))\r\n        }\r\n\r\n        // const data = getLocalItems();\r\n\r\n        // const slice = data.slice(offset,offset+perPage)\r\n\r\n        // setUsers(slice)\r\n        if( getLocalItems().length > 0 )\r\n        {\r\n            \r\n            setRows(users)\r\n            setRows(newUsers)\r\n\r\n            setSearchData(users)\r\n            setSearchData(newUsers)\r\n            // setUsers(users)\r\n        }\r\n        else\r\n        {\r\n            setRows([])\r\n            setSearchData([])\r\n        }\r\n       \r\n        \r\n        // if(sortData === 'asc' || sortData === 'desc')\r\n        // {\r\n        //     setUsers(newUsers)\r\n\r\n        // }\r\n        \r\n        // setFilteredUsers(\r\n        //     users.filter(elem => {\r\n        //         return elem.name.toString().tolowerCase().includes(searchData.toString().tolowerCase())\r\n        //     })\r\n        // )\r\n\r\n        //     const docData = JSON.parse(localStorage.getItem('Details'))\r\n        // if(localStorage.getItem('Details'))\r\n        // {\r\n        //     setUsers({\r\n        //         name : docData.name,\r\n        //         description : docData.description,\r\n        //         permission : docData.permission\r\n        //     })\r\n        // }\r\n        // else\r\n        // {\r\n        //     setUsers({\r\n        //         name: \"\",\r\n        //         description : \"\",\r\n        //         permission : \"\"\r\n        //     })\r\n        // }\r\n    }, []);\r\n\r\n    const loadUsers = async () => {\r\n\r\n        // fetch(\".public/NewData.json\").then(\r\n        //     function(res){\r\n        //     return res.json()\r\n        //   }).then(function(data){\r\n        //   // store Data in State Data Variable\r\n        //   console.log(data)\r\n        //     setUsers(data)\r\n        //   }).catch(\r\n        //     function(err){\r\n        //       console.log(err, ' error')\r\n        //     }\r\n        //   )\r\n\r\n        // const result = await axios.get(\"./NewData.json\");\r\n        // if(!result)\r\n        // {\r\n        //     setNoData(true)\r\n        // }\r\n        // console.log(result.data)\r\n        // setUsers(result.data)\r\n        // setNewUsers(result.data);\r\n        // console.log(users)\r\n        \r\n    };\r\n\r\n    const handleSelectAllClick = event => {\r\n        if (event.target.checked) {\r\n            const newSelecteds = rows.map(n => n.name);\r\n            setSelected(newSelecteds);\r\n            return;\r\n        }\r\n        setSelected([]);\r\n    };\r\n\r\n\r\n\r\n    const btnEdit = {\r\n        textDecoration: \"none\",\r\n        color: \"green\",\r\n    }\r\n\r\n    // const loadUsers = async () => {\r\n\r\n    // };\r\n\r\n\r\n    const token = localStorage.getItem(\"token\");\r\n\r\n    var loggedIn = true;\r\n\r\n    if (token == null) {\r\n        loggedIn = false\r\n    }\r\n\r\n    if (loggedIn === false) {\r\n        return <Redirect to=\"/\" />\r\n    }\r\n\r\n\r\n\r\n\r\n    const paperStyle = { backgroundColor: '#f6f6f6', padding: '50px 50px', width: 800, margin: \"20px auto\" };\r\n\r\n\r\n\r\n    const deleteUsers = (id) => {\r\n\r\n        setPopup({\r\n            show: true,\r\n            id: id\r\n        })\r\n        setOpen(true)\r\n        console.log(popup)\r\n        // debugger;\r\n\r\n        // const doc = JSON.parse(localStorage.getItem('Details'));\r\n\r\n        // var deleteArray = users.filter((elem) => {\r\n        //         return id !==  elem.id\r\n        // })\r\n        // console.log(deleteArray)\r\n\r\n        // setUsers(deleteArray)\r\n        // localStorage.setItem('Details',JSON.stringify(deleteArray))\r\n\r\n        // console.log(users)\r\n\r\n\r\n        // localStorage.setItem('Details',JSON.stringify(deleteUsers))\r\n\r\n        // const doc = JSON.parse(localStorage.getItem('Details'));\r\n        // // const data = {...doc}\r\n\r\n        // const updateUsers = users.find((elem) => {\r\n        //    return elem.id === {id}.id \r\n        // })\r\n        // users.find((elem,index) => {\r\n        //     if((elem.id) === {id}.id)\r\n        //     {\r\n        //         setUsers(updateUsers)\r\n        //         doc.splice(index,1,users)\r\n        //     }\r\n        // })\r\n\r\n\r\n        // console.log(JSON.parse(localStorage.getItem('Details')));\r\n\r\n        // const data = localStorage.removeItem('Details')\r\n\r\n\r\n        // setUsers({\r\n        //     name : \"\",\r\n        //     description : \"\",\r\n        //     permission: \"\"\r\n        // })\r\n        // const updatedItems = PostData.filter((elem) => {\r\n        //     return elem.id !== id ;\r\n        // })\r\n        // setUsers({\r\n        //     name : \"\",\r\n        //     id : '',\r\n        //     description : '',\r\n        //     permission : ''\r\n        // })\r\n        // setOpen(false)\r\n    }\r\n\r\n    const deleteUsersTrue = () => {\r\n        if (popup.show && popup.id) {\r\n            let filteredData = users.filter((elem) => elem.id !== popup.id);\r\n            setUsers(filteredData);\r\n            setNewUsers(filteredData);\r\n\r\n            localStorage.setItem('Details', JSON.stringify(filteredData))\r\n            setOpen(false)\r\n            setPopup({\r\n                show: false,\r\n                id: null,\r\n            });\r\n        }\r\n        if(getLocalItems().length <=0 )\r\n        {\r\n            setNoData(true)\r\n        }\r\n    };\r\n\r\n    const editItem = (id) => {\r\n\r\n        history.push(`/EditRoles/${id}`);\r\n        // var newEditItem = users.find((elem) => {\r\n        //     return elem.id === id;\r\n        // });\r\n        // console.log(inputData)\r\n        // const data = getLocalItems();\r\n        // console.log(data);\r\n        // console.log(newEditItem.id)\r\n        // // setInputData(data)\r\n        // console.log(inputData)\r\n        // setInputData(newEditItem)\r\n        // console.log(inputData.name)\r\n        // setIsEditItem(id)\r\n\r\n    }\r\n\r\n    const GridSearchColumn = {\r\n        \"Roles\": [\"name\", \"permission\"]\r\n    }\r\n    \r\n    const GridSearchTypeEnum = {\r\n        Roles: \"Roles\"\r\n    }\r\n    \r\nconst SearchGrid = (Data, SearchText, GridType) => {\r\n    return Data.filter((item) => {\r\n        var IsMatched = false;\r\n        GridSearchColumn[GridType].forEach((element,i) =>  {\r\n            if (item[element] !== undefined) {\r\n                var index = (item[element] === null || item[element] === undefined ? -1 : (item[element].toString().toLowerCase().indexOf(SearchText.toLowerCase())));\r\n                if (index >= 0) {\r\n                    if (index >= 0) {\r\n                        IsMatched = true;\r\n                        return false;\r\n                    }\r\n                }\r\n            }\r\n        })\r\n        if (IsMatched)\r\n            return item;\r\n    });\r\n}\r\n\r\n\r\n    const handleOnSearch = (e,data) => {\r\n        setPage(0);\r\n\r\n        if (e.target.value.length === 0) {\r\n            // console.log(users)\r\n            // console.log(searchData)\r\n            setRows(searchData);\r\n            setNewUsers(searchData)\r\n            // setUsers(searchData)\r\n            \r\n        }\r\n         else {\r\n            const searchData1 = SearchGrid(\r\n                data,\r\n                e.target.value,\r\n                GridSearchTypeEnum.Roles\r\n            );\r\n            // console.log(searchData)\r\n            // console.log(searchData1)\r\n            setRows(searchData1);\r\n            setUsers(searchData1)\r\n            setNewUsers(searchData1)\r\n        }\r\n    };\r\n    \r\n    \r\n    \r\n    const sorted = users.sort((a,b)=> {\r\n        const isReversed = (sortData === 'asc') ? 1 : -1;\r\n        return isReversed*a.name.localeCompare(b.name)\r\n    });\r\n\r\n    \r\n\r\n//    const handleNextPage = (e) => {\r\n//         const selectedPage = 1;\r\n//         const offset = selectedPage * perPage;\r\n\r\n//         setCurrentPage(selectedPage)\r\n//         setOffset(offset)\r\n\r\n//         const data = getLocalItems()\r\n\t\t\r\n// \t\tconst slice = data.slice(offset, offset + perPage)\r\n//         console.log(slice)\r\n//         setUsers(slice)\r\n//     };\r\n\r\n    \r\n//    const handlePreviousPage = (e) => {\r\n//     const selectedPage = 0;\r\n//     const offset = selectedPage * perPage;\r\n\r\n//     setCurrentPage(selectedPage)\r\n//     setOffset(offset)\r\n\r\n//     const data = getLocalItems()\r\n    \r\n//     const slice = data.slice(offset, offset + perPage)\r\n//     console.log(slice)\r\n//     setUsers(slice)\r\n// };\r\n\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n    \r\n    const handleChangeRowsPerPage = event => {\r\n        setRowsPerPage(parseInt(event.target.value, 10));\r\n        setPage(0);\r\n    };\r\n\r\n    \r\n\r\n    // const sortingDownButton = () => {\r\n        \r\n    //     if(count <= 1 )\r\n    //     {\r\n    //         setSortData('desc')\r\n    //         setChecked((prev) => !prev);\r\n    //         setCount(count + 1)  \r\n    //     }\r\n    //     else\r\n    //     {\r\n    //         setSortData('')\r\n    //         setChecked((prev) => !prev); \r\n    //         setCount(0)\r\n    //     }\r\n    // }\r\n    const sortingDownButton = () => {\r\n        if(count === 0)\r\n        {\r\n            setSortData('asc')\r\n            setChecked((prev) => !prev);  \r\n            setCount(count + 1)\r\n            setIcon(false)  \r\n             \r\n        }\r\n        else if(count === 1 )\r\n        {\r\n            setSortData('desc')\r\n            setChecked((prev) => !prev);  \r\n            setCount(count + 1) \r\n            setIcon(true) \r\n            \r\n        }\r\n        else if(count >= 1)\r\n        {\r\n            setSortData('')\r\n            setChecked((prev) => !prev);\r\n            setCount(0)\r\n        }\r\n    }\r\n    \r\n    const isSelected = name => selected.indexOf(name) !== -1;\r\n    const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n\r\n  \r\n\r\n    return (\r\n        <>\r\n\r\n            {/* <div>\r\n            {PostData.map((postDetail,index) => {\r\n                return <h1>{postDetail.name}</h1>\r\n            })  }\r\n        </div> */}\r\n\r\n            {/* <h2>Hi, <span>{adminUser.name}</span> </h2> */}\r\n\r\n            <Grid align=\"center\">\r\n                <Paper elevation={20} style={paperStyle}>\r\n                    {/* <Grid align=\"left\" >\r\n                        <Link to={'Homepage'}  ><span >Go To Homepage</span></Link>\r\n                    </Grid> */}\r\n                    {/* <h2>Hi, <span>{adminUser.name}</span> </h2> */}\r\n                    {/* <Button color=\"primary\" variant=\"contained\" className=\"btnAdd\" align=\"right\" onClick={btnAdd} >Add Roles</Button> */}\r\n                    {/* <br /> */}\r\n\r\n                    {\r\n                        <Dialog\r\n                            open={open}\r\n                            onClose={handleClose}\r\n                            aria-labelledby=\"draggable-dialog-title\">\r\n                            <DialogTitle  >\r\n                                DELETE\r\n                            </DialogTitle>\r\n                            <DialogContent>\r\n                                <DialogContentText>\r\n                                    Are you sure you want to delete this item?\r\n                                </DialogContentText>\r\n                            </DialogContent>\r\n                            <DialogActions>\r\n                                <Button autoFocus onClick={handleClose} color=\"primary\">\r\n                                    Cancel\r\n                                </Button>\r\n                                <Button onClick={deleteUsersTrue} color=\"primary\">\r\n                                    Yes\r\n                                </Button>\r\n                            </DialogActions>\r\n                        </Dialog>\r\n                    }\r\n\r\n                    <TableContainer className=\"table border shadow\"  >\r\n                        <h3>USER ROLES</h3>\r\n                     \r\n                        <TextField\r\n                            id=\"filled-required\"\r\n                            placeholder=\"Search\"\r\n                            autoComplete=\"off\"\r\n                            className={'searchtextfield'}\r\n                            margin=\"normal\"\r\n                            variant=\"filled\"\r\n                            onChange={(e) => handleOnSearch(e, searchData)}\r\n                        />\r\n                        \r\n                        <br/>\r\n                         \r\n                        \r\n                        <TableHead className=\"thread-dark\"  >\r\n                            <TableRow>\r\n                                <TableCell align=\"center\">S.No.</TableCell>\r\n                                <TableCell align=\"center\">Role Name<Button className=\"buttonStyle\"  onClick={sortingDownButton}>{icon ? <ArrowDownwardIcon/> : <ArrowUpwardIcon/>}</Button ></TableCell>\r\n                                <TableCell align=\"center\" >Role Description</TableCell>\r\n                                <TableCell align=\"center\">Role Permission</TableCell>\r\n                                <TableCell align=\"center\">Action</TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {(noData !== false) ? <p>No Data Found</p> : noData === false}\r\n                            {\r\n                                ((sortData === 'asc' || sortData == 'desc') ? (\r\n                                    users\r\n                                    .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                                    .map((user, index) => \r\n                                    {\r\n                                    //    const isItemSelected = isSelected(user.name);\r\n                                    return (\r\n                                        \r\n                                        <TableRow key={user.id} >\r\n                                            <TableCell align=\"center\" scope=\"row\">{rowsPerPage*page + index + 1}</TableCell>\r\n                                            <TableCell align=\"center\">{user.name}</TableCell>\r\n                                            <TableCell align=\"center\" >{user.description}</TableCell>\r\n                                            <TableCell align=\"center\">{user.permission}</TableCell>\r\n                                            <TableCell align=\"center\">\r\n                                                <Button className=\"btnEdit\" onClick={() => editItem(user.id)} style={btnEdit} ><EditIcon /></Button>\r\n                                                <br />\r\n                                                <Button className=\"btnDelete\" style={btnDelete} onClick={() => deleteUsers(user.id)} ><DeleteForeverIcon /></Button>\r\n                                            </TableCell>\r\n                                        </TableRow>\r\n    \r\n                                    );\r\n                                    })) : (\r\n                                        newUsers\r\n                                        .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                                        .map((user, index) => \r\n                                        {\r\n                                        //    const isItemSelected = isSelected(user.name);\r\n                                        return (\r\n                                            \r\n                                            <TableRow key={user.id} >\r\n                                                <TableCell align=\"center\" scope=\"row\">{rowsPerPage*page + index + 1}</TableCell>\r\n                                                <TableCell align=\"center\">{user.name}</TableCell>\r\n                                                <TableCell align=\"center\">{user.description}</TableCell>\r\n                                                <TableCell align=\"center\">{user.permission}</TableCell>\r\n                                                <TableCell align=\"center\">\r\n                                                    <Button className=\"btnEdit\" onClick={() => editItem(user.id)} style={btnEdit} ><EditIcon /></Button>\r\n                                                    <br />\r\n                                                    <Button className=\"btnDelete\" style={btnDelete} onClick={() => deleteUsers(user.id)} ><DeleteForeverIcon /></Button>\r\n                                                </TableCell>\r\n                                            </TableRow>\r\n        \r\n                                        );\r\n                                        })))\r\n                            }\r\n                            \r\n\r\n                        </TableBody>\r\n                        {/* <Button onClick={handlePreviousPage}>Previous</Button> */}\r\n                        <Button color=\"primary\" variant=\"contained\" className=\"btnAdd\" align=\"right\" onClick={btnAdd} >Add Roles</Button>\r\n                        {/* <Button onClick={handleNextPage}>Next</Button> */}\r\n                    </TableContainer>\r\n\r\n                    <TablePagination\r\n                        rowsPerPageOptions={[5, 10, 25]}\r\n                        component=\"div\"\r\n                        count={rows.length}\r\n                        rowsPerPage={rowsPerPage}\r\n                        page={page}\r\n                        backIconButtonProps={{ 'aria-label': 'previous page' }}\r\n                        nextIconButtonProps={{ 'aria-label': 'next page' }}\r\n                        onPageChange={handleChangePage}\r\n                        onRowsPerPageChange={handleChangeRowsPerPage}\r\n                    />\r\n\r\n                </Paper>\r\n             </Grid>\r\n\r\n\r\n\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Roles;","import React, { useState } from 'react'\r\n// import axios from 'axios';\r\nimport { useHistory, Redirect } from 'react-router-dom';\r\n\r\nimport { Avatar, Button, Grid, Paper } from \"@material-ui/core\";\r\nimport { TextValidator, ValidatorForm } from 'react-material-ui-form-validator';\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\n// import PostData from '../Data/posts.json'\r\n\r\n\r\n\r\n\r\n// const getLocalItems = () => {\r\n//   let details = localStorage.getItem('Details');\r\n//   if (details ) {\r\n//       return JSON.parse(localStorage.getItem('Details'))\r\n//   }\r\n//   else if (details === null)  {\r\n//       return [];\r\n//   }\r\n// }\r\n\r\nconst AddRoles = () => {\r\n\r\n  let history = useHistory();\r\n  // const [inputData,setInputData] =  useState({\r\n  //   id : \"\",\r\n  //   name : \"\",\r\n  //   description : \"\",\r\n  //   permission : \"\"\r\n  // })\r\n\r\n  const [notification, setNotification] = React.useState(false);\r\n  const [success, setSuccess] = React.useState(false);\r\n  \r\n  const handleSnackbar = (event, reason) => {\r\n      if (reason === 'clickaway') {\r\n          return;\r\n      }\r\n      setNotification(false);\r\n      setSuccess(false)\r\n  }\r\n\r\n  const [user, setUser] = useState({\r\n    id : new Date().getTime().toString(),\r\n    name : \"\",\r\n    description : \"\",\r\n    permission : \"\"\r\n  }\r\n  );\r\n\r\n  // useEffect(() => {\r\n    \r\n  //   //  console.log(JSON.parse(localStorage.getItem('Details')))\r\n  //   // console.log(localStorage.getItem('Details'))\r\n  //   // localStorage.setItem('Details', JSON.stringify(user))\r\n\r\n  //   // const doc = JSON.parse(localStorage.getItem('Details'))\r\n  //   // if(localStorage.getItem('Details'))\r\n  //   // {\r\n  //   //   setUser({\r\n  //   //     id : doc.id,\r\n  //   //     name : doc.name,\r\n  //   //     description : doc.description,\r\n  //   //     permission : doc.permission\r\n  //   //   })\r\n  //   // }\r\n  //   // const data = localStorage.getItem('Details')\r\n  //   //  if(user)\r\n  //   //     {\r\n  //   //         setUser({\r\n  //   //           id : data.id,\r\n  //   //             name : data.name,\r\n  //   //             description : data.description,\r\n  //   //             permission : data.permission\r\n  //   //         })\r\n  //   //     }\r\n  //   // const docData = localStorage.getItem('Details')\r\n  //   // localStorage.getItem('Details')\r\n  //   // loadUser()\r\n  // }, [user]);\r\n\r\n  // const { name, description, permission } = user;\r\n\r\n  const onInputChange = e => {\r\n    setUser({...user, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const onSubmit = async e => {\r\n    e.preventDefault();\r\n    \r\n    // console.log(user1)\r\n    // const newData = getLocalItems();\r\n    const oldData = JSON.parse(localStorage.getItem('Details'))\r\n    oldData.push(user)\r\n    \r\n    // if(user.id === null)\r\n    // {\r\n    //   setUser({\r\n    //     id : getLocalItems().length + 1\r\n    //   })\r\n    // }\r\n    \r\n    // PostData.push(user)\r\n    // localStorage.setItem('Details',JSON.stringify(PostData))\r\n    // console.log(PostData)\r\n    // const data = JSON.parse(localStorage.getItem('Details'))\r\n        \r\n        \r\n    // localStorage.setItem('Details',JSON.stringify(oldData))\r\n    \r\n    \r\n\r\n    localStorage.setItem('Details', JSON.stringify(oldData))\r\n    // localStorage.setItem('Details',JSON.stringify(user))\r\n    // const doc= JSON.parse(localStorage.getItem('Details'))\r\n    \r\n    // console.log(localStorage.getItem('Details'))\r\n\r\n    // PostData.map((elem,index) => {\r\n    //   elem.id =index+1\r\n    //   elem.name = user.name ;\r\n    //   elem.description  =user.description ;\r\n    //    elem.permission = user.permission\r\n       \r\n    //   //  localStorage.getItem('Details')\r\n    //   // elem.id =index+1\r\n    //   // user.name = elem.name;\r\n    //   //                       user.description = elem.description ;\r\n    //   //                       user.permission= elem.permission \r\n    // })\r\n\r\n    \r\n    setSuccess(true);\r\n    setTimeout(() => {\r\n        history.push(\"/Roles\");\r\n    }, 1000)\r\n    \r\n    \r\n    \r\n    \r\n  };\r\n\r\n\r\n//   const loadUser = (e) => {\r\n\r\n//     // getLocalItems()\r\n//         // PostData.map((elem)=>{\r\n//         //   elem.id = user.id\r\n//         //     elem.name = user.name;\r\n//         //     elem.description = user.description;\r\n//         //     elem.permission = user.permission\r\n//         //   })\r\n//         //   const docData = JSON.parse(localStorage.getItem('Details'))\r\n//         // if(localStorage.getItem('Details'))\r\n//         // {\r\n//         //     setUser({\r\n//         //         name : docData.name,\r\n//         //         description : docData.description,\r\n//         //         permission : docData.permission\r\n//         //     })\r\n//         // }\r\n//         // else\r\n//         // {\r\n//         //     setUser({\r\n//         //         name: \"\",\r\n//         //         description : \"\",\r\n//         //         permission : \"\"\r\n//         //     })\r\n//         // }\r\n        \r\n       \r\n// };\r\n  const token = localStorage.getItem(\"token\");\r\n\r\n  var loggedIn = true;\r\n\r\n  if (token == null) {\r\n    loggedIn = false\r\n  }\r\n\r\n  if (loggedIn === false) {\r\n    return <Redirect to=\"/\" />\r\n  }\r\n\r\n  const btnCancel = () => {\r\n    history.push(\"/Roles\");\r\n  }\r\n\r\n  const btnButton = {\r\n    color: \"red\",\r\n  }\r\n\r\n\r\n\r\n  const paperStyle = { backgroundColor: '#f6f6f6', padding: 20, height: '70vh', width: 280, margin: \"20px auto\" }\r\n  const avatarStyle = { backgroundColor: 'green' }\r\n  return (\r\n    <div className=\"container\" align=\"center\">\r\n      <div className=\"auto \">\r\n        <Grid>\r\n          <Paper elevation={10} style={paperStyle}>\r\n          <Grid align='center'>\r\n                        <Avatar style={avatarStyle}><AddCircleIcon /></Avatar>\r\n                    </Grid>\r\n            <h2 className=\"text\">ADD ROLES</h2>\r\n            <ValidatorForm onSubmit={e => onSubmit(e)} noValidate={true}>\r\n              <div className=\"form\">\r\n                <TextValidator\r\n                  fullWidth\r\n                  label=\"Role Name\"\r\n                  type=\"text\"\r\n                  validators={['required']}\r\n                  errorMessages={['Required']}\r\n                  className=\"form\"\r\n                  placeholder=\"Enter Your Role\"\r\n                  name=\"name\"\r\n                  value={user.name}\r\n                  onChange={e => onInputChange(e)}\r\n                />\r\n\r\n              </div>\r\n              <br />\r\n              <div className=\"form\">\r\n\r\n              <TextValidator\r\n                  fullWidth\r\n                  id=\"standard-multiline-static\"\r\n                  label=\"Role Description\"\r\n                  multiline\r\n                  rows={4}\r\n                  type=\"text\"\r\n                  validators={['required']}\r\n                  errorMessages={['Required']}\r\n                  className=\"form\"\r\n                  placeholder=\"Enter Role Description\"\r\n                  name=\"description\"\r\n                  value={user.description}\r\n                  onChange={e => onInputChange(e)}\r\n                />\r\n\r\n              </div>\r\n              <br />\r\n              <div className=\"form\">\r\n                <TextValidator\r\n                  fullWidth\r\n                  id=\"standard-multiline-static\"\r\n                  label=\"Role Permission\"\r\n                  multiline\r\n                  rows={4}\r\n                  type=\"text\"\r\n                  validators={['required']}\r\n                  errorMessages={['Required']}\r\n                  className=\"form\"\r\n                  placeholder=\"Enter Role Permission\"\r\n                  name=\"permission\"\r\n                  value={user.permission}\r\n                  onChange={e => onInputChange(e)}\r\n                />\r\n              </div>\r\n              <br />\r\n              <Button type='submit' color='primary' variant=\"contained\" className=\"btn\" >Save</Button>\r\n              <Snackbar\r\n                                    anchorOrigin={{\r\n                                        vertical: 'top',\r\n                                        horizontal: 'center'\r\n                                    }}\r\n                                    open={notification}\r\n                                    autoHideDuration={5000}\r\n                                    onClose={handleSnackbar}\r\n                                    message='Error'\r\n                                    action={\r\n                                        <React.Fragment>\r\n                                            <Button onClick={handleSnackbar}>Close</Button>\r\n                                        </React.Fragment>\r\n                                    } />\r\n                                <Snackbar\r\n                                    anchorOrigin={{\r\n                                        vertical: 'top',\r\n                                        horizontal: 'center'\r\n                                    }}\r\n                                    open={success}\r\n                                    autoHideDuration={5000}\r\n                                    onClose={handleSnackbar}\r\n                                    message='Success'\r\n                                    action={\r\n                                        <React.Fragment>\r\n                                            <Button onClick={handleSnackbar}\r\n                                            >Close</Button>\r\n                                        </React.Fragment>\r\n                                    } />\r\n              <Button onClick={btnCancel} style={btnButton}>Cancel</Button>\r\n\r\n            </ValidatorForm>\r\n\r\n          </Paper>\r\n        </Grid>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AddRoles;","import React, { useState, useEffect } from \"react\";\r\n// import axios from \"axios\";\r\nimport { useHistory, useParams, Redirect } from \"react-router-dom\";\r\nimport { Avatar, Button, Grid, Paper } from \"@material-ui/core\";\r\nimport { TextValidator, ValidatorForm } from 'react-material-ui-form-validator';\r\n\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\n// import PostData from '../Data/posts.json'\r\n\r\n\r\nconst getLocalItems = () => {\r\n    let details = localStorage.getItem('Details');\r\n    if(details)\r\n    {\r\n        return JSON.parse(localStorage.getItem('Details'))\r\n    }\r\n    else if (details === null)\r\n    {\r\n        return [];\r\n    }\r\n}\r\nconst EditRoles = () => {\r\n\r\n    let history = useHistory();\r\n    const { id } = useParams();\r\n    \r\n    const [item, setItem] = useState(getLocalItems());\r\n    const [user,setUser] = useState({\r\n        id : \"\",\r\n        name :\"\",\r\n        description : \"\",\r\n        permission : \"\"\r\n    })\r\n    // const { name, description, permission } = user;\r\n    \r\n    const onInputChange = e => {\r\n        setUser({ ...user, [e.target.name]: e.target.value });\r\n    };\r\n\r\n    const [notification, setNotification] = React.useState(false);\r\n    const [success, setSuccess] = React.useState(false);\r\n    \r\n    const handleSnackbar = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        setNotification(false);\r\n        setSuccess(false)\r\n    }\r\n   \r\n// const data = getLocalItems();\r\n    useEffect(() => {\r\n        const doc = JSON.parse(localStorage.getItem('Details'));\r\n        const editData = doc.find(e => e.id === {id}.id);\r\n        console.log(editData);\r\n        setUser(editData);\r\n// const data = {...doc}\r\n\r\n// Object.keys(data).find((elem,key) => {\r\n//     if(data[key].id === {id}.id)\r\n//     {   \r\n//     setUser({\r\n//         id : data[elem].id,\r\n//         name :data[elem].name,\r\n//         description : data[elem].description,\r\n//         permission : data[elem].permission\r\n\r\n//     })\r\n//     }\r\n    \r\n// })\r\n\r\n// const newEdit = doc.find((elem) => {\r\n//     console.log({id}.id)\r\n//     console.log(elem.id)\r\n//     if(elem.id === {id}.id)\r\n//     {\r\n//         return elem.id === {id}\r\n//     }\r\n//     else{\r\n//         return elem.id === {id}\r\n//     } \r\n// })\r\n\r\n// console.log(newEdit)\r\n\r\n\r\n// console.log(newEdit)\r\n\r\n  // console.log(user)\r\n        \r\n    }, [id]);\r\n\r\n    \r\n\r\n    const onSubmit = async e => {\r\n        e.preventDefault();\r\n            // {\r\n            //     PostData.map((elem,index)=>{\r\n            //         // if(elem.id === {id})\r\n            //             {\r\n            //                 elem.id = index+1;\r\n            //                 // user.name = elem.name;\r\n            //                 // user.description = elem.description ;\r\n            //                 // user.permission= elem.permission \r\n            //                 elem.name = user.name;\r\n            //                 elem.description = user.description;\r\n            //                 elem.permission = user.permission\r\n            //             }\r\n                    \r\n            //     });\r\n            // }\r\n\r\n            \r\n\r\n            const doc = JSON.parse(localStorage.getItem('Details'));\r\n            // const data = {...doc}\r\n\r\n            const updateUsers = item.find((elem) => {\r\n               return elem.id === {id}.id;\r\n            });\r\n            \r\n             \r\n            console.log(updateUsers)\r\n            setUser(updateUsers);\r\n\r\n            const index = item.findIndex((elem) => elem.id === {id}.id);\r\n\r\n             doc.splice(index,1,user)\r\n\r\n            \r\n               \r\n                \r\n\r\n            \r\n \r\n            \r\n            \r\n            // item.find((elem,index) => \r\n            //     if((elem.id) === {id}.id)\r\n            //     {\r\n            //         setUser(updateUsers)\r\n            //         doc.splice(index,1,user)\r\n            //     }\r\n            // ));\r\n            \r\n        //    console.log(doc)\r\n                \r\n            \r\n            \r\n          \r\n\r\n            localStorage.setItem('Details',JSON.stringify(doc))\r\n            \r\n            // const data = {...doc}\r\n            // Object.keys(data).find((elem,key) => {\r\n            //     console.log(elem)\r\n            //     if(data[key].id === {id}.id)\r\n            //     {   \r\n            //         setUser(data)\r\n            //         console.log(user)\r\n            //         // localStorage.setItem('Details',JSON.stringify())\r\n                    \r\n            //     }\r\n            // })\r\n            \r\n            \r\n            setSuccess(true);\r\n            setTimeout(() => {\r\n                history.push(\"/Roles\");\r\n            }, 1000)\r\n            \r\n            \r\n            \r\n            // const docData = JSON.parse(localStorage.getItem('Details'))\r\n\r\n          \r\n            // localStorage.setItem('Details', JSON.stringify(oldData))\r\n            // setUser({\r\n            //     name : docData.name,\r\n            //     description : docData.description,\r\n            //     permission : docData.permission\r\n            // })\r\n            \r\n            \r\n                    \r\n          \r\n        \r\n    };\r\n\r\n    // const loadUser = async () => {\r\n        \r\n\r\n        // const newEditItem = PostData.find((elem) => {\r\n        //     return elem.id === {id};\r\n        // });\r\n        // setUser(newEditItem)\r\n        // getLocalItems()\r\n        // if(localStorage.getItem('Details'))\r\n        //     PostData.map((elem)=>{\r\n        //         if(elem.id === {id})\r\n        //         elem.id = user.id\r\n        //         elem.name = user.name;\r\n        //         elem.description = user.description;\r\n        //         elem.permission = user.permission\r\n        //       })\r\n        //     const docData = JSON.parse(localStorage.getItem('Details'))\r\n        // if({id})\r\n        // {\r\n        //     setUser({\r\n        //         name : docData.name,\r\n        //         description : docData.description,\r\n        //         permission : docData.permission\r\n        //     })\r\n        // }\r\n        \r\n       \r\n        \r\n    // };\r\n\r\n    const token = localStorage.getItem(\"token\");\r\n\r\n    var loggedIn = true;\r\n\r\n    if (token == null) {\r\n        loggedIn = false\r\n    }\r\n\r\n    if (loggedIn === false) {\r\n        return <Redirect to=\"/\" />\r\n    }\r\n\r\n    const btnCancel = () => {\r\n        history.push(\"/Roles\")\r\n    }\r\n\r\n    const btnButton = {\r\n        color: \"red\",\r\n    }\r\n\r\n    const paperStyle = { backgroundColor: '#f6f6f6', padding: 20, height: '70vh', width: 280, margin: \"20px auto\" }\r\n    const avatarStyle = { backgroundColor: 'green' }\r\n\r\n    return (\r\n        <div className=\"container\" align=\"center\">\r\n            <div className=\"auto \">\r\n                <Grid>\r\n                    <Paper elevation={10} style={paperStyle}>\r\n                    <Grid align='center'>\r\n                        <Avatar style={avatarStyle}><EditIcon /></Avatar>\r\n                    </Grid>\r\n                        <h2 className=\"text\">EDIT ROLES</h2>\r\n                        <ValidatorForm onSubmit={e => onSubmit(e)} noValidate={true}>\r\n                            <div className=\"form\">\r\n                            <TextValidator\r\n                  fullWidth\r\n                  label=\"Role Name\"\r\n                  type=\"text\"\r\n                  validators={['required']}\r\n                  errorMessages={['Required']}\r\n                  className=\"form\"\r\n                  placeholder=\"Enter Your Role\"\r\n                  name=\"name\"\r\n                  value={user.name}\r\n                  onChange={e => onInputChange(e)}\r\n                />\r\n\r\n              </div>\r\n              <br />\r\n              <div className=\"form\">\r\n\r\n              <TextValidator\r\n                  fullWidth\r\n                  id=\"standard-multiline-static\"\r\n                  label=\"Role Description\"\r\n                  multiline\r\n                  rows={4}\r\n                  type=\"text\"\r\n                  validators={['required']}\r\n                  errorMessages={['Required']}\r\n                  className=\"form\"\r\n                  placeholder=\"Enter Role Description\"\r\n                  name=\"description\"\r\n                  value={user.description}\r\n                  onChange={e => onInputChange(e)}\r\n                />\r\n\r\n              </div>\r\n              <br />\r\n              <div className=\"form\">\r\n                <TextValidator\r\n                  fullWidth\r\n                  id=\"standard-multiline-static\"\r\n                  label=\"Role Permission\"\r\n                  multiline\r\n                  rows={4}\r\n                  type=\"text\"\r\n                  validators={['required']}\r\n                  errorMessages={['Required']}\r\n                  className=\"form\"\r\n                  placeholder=\"Enter Role Permission\"\r\n                  name=\"permission\"\r\n                  value={user.permission}\r\n                  onChange={e => onInputChange(e)}\r\n                />\r\n                            </div>\r\n                            <br />\r\n                            <Button color='primary' variant=\"contained\" type=\"submit\" className=\"btn \" >Update</Button>\r\n                            <Snackbar\r\n                                    anchorOrigin={{\r\n                                        vertical: 'top',\r\n                                        horizontal: 'center'\r\n                                    }}\r\n                                    open={notification}\r\n                                    autoHideDuration={5000}\r\n                                    onClose={handleSnackbar}\r\n                                    message='Error'\r\n                                    action={\r\n                                        <React.Fragment>\r\n                                            <Button onClick={handleSnackbar}>Close</Button>\r\n                                        </React.Fragment>\r\n                                    } />\r\n                                <Snackbar\r\n                                    anchorOrigin={{\r\n                                        vertical: 'top',\r\n                                        horizontal: 'center'\r\n                                    }}\r\n                                    open={success}\r\n                                    autoHideDuration={5000}\r\n                                    onClose={handleSnackbar}\r\n                                    message='Success'\r\n                                    action={\r\n                                        <React.Fragment>\r\n                                            <Button onClick={handleSnackbar}\r\n                                            >Close</Button>\r\n                                        </React.Fragment>\r\n                                    } />\r\n                            <Button onClick={btnCancel} style={btnButton} >Cancel</Button>\r\n\r\n                        </ValidatorForm>\r\n                    </Paper>\r\n                </Grid>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default EditRoles;\r\n","import { Grid, Paper, Typography, Avatar, Button, TextField } from '@material-ui/core';\r\nimport React, { useEffect } from 'react';\r\nimport AddCircleOutlineOutlinedIcon from '@material-ui/icons/AddCircleOutlineOutlined';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport { Link, useHistory, Redirect } from 'react-router-dom';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\n// import Stepper from '@material-ui/core/Stepper';\r\nimport Step from '@material-ui/core/Step';\r\nimport StepLabel from '@material-ui/core/StepLabel';\r\nimport { MDBCol, MDBContainer, MDBRow } from 'mdbreact';\r\nimport MultiStep from './Multi';\r\nimport Stepper from './Stepper';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\n// import FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n    },\r\n    backButton: {\r\n        marginRight: theme.spacing(1),\r\n    },\r\n    instructions: {\r\n        marginTop: theme.spacing(1),\r\n        marginBottom: theme.spacing(1),\r\n    },\r\n    backdrop: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        color: '#fff',\r\n    },\r\n}));\r\n\r\nfunction getSteps() {\r\n    return ['', ''];\r\n}\r\n\r\n\r\n\r\n\r\nexport const StepOne = (props) => {\r\n\r\n\r\n    const classes = useStyles();\r\n    const [activeStep, setActiveStep] = React.useState(0);\r\n    const [errorFieldName, setErrorFieldName] = React.useState(false);\r\n    const [errorFieldEmail, setErrorFieldEmail] = React.useState(false);\r\n    const [errorFieldPhone, setErrorFieldPhone] = React.useState(false);\r\n    const [errorFieldPassword, setErrorFieldPassword] = React.useState(false);\r\n    const [errorFieldConfirmPassword, setErrorFieldConfirmPassword] = React.useState(false);\r\n    const steps = getSteps();\r\n\r\n    const handleNext = () => {\r\n        setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n    };\r\n\r\n    const handleBack = () => {\r\n        setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n    };\r\n\r\n    const handleReset = () => {\r\n        setActiveStep(0);\r\n    };\r\n\r\n\r\n\r\n    const paperStyle = { padding: '30px 20px ', width: 300, margin: \"20px auto\" }\r\n    const headerStyle = { margin: 0 }\r\n    const avatarStyle = { backgroundColor: 'green' }\r\n    const marginTop = { marginTop: 5 }\r\n    const [formObj, setFormObj] = React.useState({\r\n        formData: {\r\n            name: '',\r\n            email: '',\r\n            password: '',\r\n            confirmpassword: '',\r\n            phone: '',\r\n            checkedA: false,\r\n            gender: '',\r\n\r\n        },\r\n        submitted: false,\r\n        filterOptions: [],\r\n    });\r\n    const { formData } = formObj;\r\n\r\n    useEffect(() => {\r\n\r\n        // console.log(props.sendData(btn))\r\n        const data = JSON.parse(localStorage.getItem('Data'))\r\n        if (data !== null) {\r\n            setFormObj({ formData: data })\r\n        }\r\n\r\n        // setFormObj({formData : data})\r\n        // setFormObj({formData : data})\r\n        // const { formData } = formObj;\r\n\r\n        // setFormObj({ formData: formData });\r\n\r\n        // localStorage.setItem('Data',JSON.stringify(formData))\r\n\r\n    }, []);\r\n\r\n\r\n    // useEffect(() => {\r\n\r\n    // localStorage.setItem('Data', JSON.stringify(formData))\r\n    //         const step1 = JSON.parse(localStorage.getItem('Data'))\r\n    //         if(step1 )\r\n    //         {\r\n    //            localStorage.setItem('Data', JSON.stringify(formData)) \r\n    //         }\r\n    //         else{\r\n\r\n    //         }\r\n\r\n    // })\r\n\r\n    const [notification, setNotification] = React.useState(false);\r\n\r\n    const [success, setSuccess] = React.useState(false);\r\n\r\n    const handleSnackbar = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n\r\n        setNotification(false);\r\n        setSuccess(false)\r\n    }\r\n\r\n    const onCheckChange = (e) => {\r\n        // const { formData } = formObj;\r\n        formData[e.target.name] = e.target.checked;\r\n        setFormObj({ formData: formData });\r\n        localStorage.setItem('Data', JSON.stringify(formData))\r\n    }\r\n\r\n\r\n\r\n    // const [btn, setBtn] = React.useState(true);\r\n\r\n    const step2 = {}\r\n\r\n    const handleChange = (event) => {\r\n        // console.log(\"event\", event.target.value);\r\n        // const { formData } = formObj;\r\n        var btn = true;\r\n        formData[event.target.name] = event.target.value;\r\n        setFormObj({ formData: formData });\r\n        // console.log(formData)\r\n\r\n        localStorage.setItem('Data', JSON.stringify(formData))\r\n\r\n        // setFormObj({ formData: formData });\r\n        // const data = JSON.parse(localStorage.getItem('Data'))\r\n        // localStorage.setItem('Button',JSON.stringify(btn))\r\n\r\n        if (formData.name !== '' && formData.email !== '' && formData.password !== '' && formData.confirmpassword !== '' && formData.phone.length === 10 && formData.phone !== '' && formData.password === formData.confirmpassword) {\r\n\r\n            btn = false\r\n\r\n            // props.sendData(btn)\r\n            // console.log(btn,1)\r\n        }\r\n        else {\r\n            btn = true\r\n            // props.sendData(btn)\r\n            // console.log(btn,2)\r\n        }\r\n\r\n        props.sendData(btn)\r\n\r\n        // if(formData.phone.length === 10 && formData.phone !== '' )\r\n        // {\r\n        //     btn = false\r\n        // }\r\n        // else\r\n        // {\r\n        //     btn = true\r\n        // }\r\n\r\n\r\n        // console.log(btn,3)\r\n\r\n\r\n\r\n        // const step1 = JSON.parse(localStorage.getItem('Data'))\r\n\r\n\r\n        // if(formData.name === '' && formData.email === '' && formData.phone === '' && formData.password === '' && formData.confirmpassword === '')\r\n        // {\r\n        //     setErrorField(true)\r\n        // }\r\n        // else\r\n        // {\r\n        //     setErrorField(false)\r\n        // }\r\n        // if(formData.name === '')\r\n        // {\r\n        //     setErrorField(true)\r\n        // }\r\n        // else\r\n        // {\r\n        //     setErrorField(false)\r\n        // }\r\n        // if (formData.name !== '' && formData.email !== '' && formData.phone !== '' && formData.password !== '' && formData.confirmpassword !== '') {\r\n        //     setErrorField(false)\r\n\r\n        // }\r\n        // else {\r\n        //     setErrorField(true)\r\n        // }\r\n        // if(formData.name !== '')\r\n        // {\r\n        //     setErrorFieldName(false)\r\n        // }\r\n        // else\r\n        // {\r\n        //     setErrorFieldName(true)\r\n        // }\r\n        //  if(formData.email !== '')\r\n        // {\r\n        //     setErrorFieldEmail(false)\r\n        // }\r\n        // else\r\n        // {\r\n        //     setErrorFieldEmail(true)\r\n        // }\r\n        //  if(formData.phone !== '')\r\n        // {\r\n        //     setErrorFieldPhone(false)\r\n        // }\r\n        // else\r\n        // {\r\n        //     setErrorFieldPhone(true)\r\n        // } if(formData.password !== '')\r\n        // {\r\n        //     setErrorFieldPassword(false)\r\n        // }\r\n        // else\r\n        // {\r\n        //     setErrorFieldPassword(true)\r\n        // }\r\n        //  if(formData.confirmpassword !== '')\r\n        // {\r\n        //     setErrorFieldConfirmPassword(false)\r\n        // }\r\n        // else\r\n        // {\r\n        //     setErrorFieldConfirmPassword(true)\r\n        // }\r\n\r\n        //  localStorage.setItem('Data', JSON.stringify(formData))\r\n\r\n\r\n\r\n        //   const step1 = JSON.parse(localStorage.getItem('Data'))\r\n\r\n\r\n        ValidatorForm.addValidationRule('isRequiredName', () => {\r\n\r\n            if ((formData.name.length < 1)) {\r\n                return false;\r\n            }\r\n            return true;\r\n        });\r\n        ValidatorForm.addValidationRule('isRequiredEmail', () => {\r\n\r\n            if ((formData.email.length < 1)) {\r\n                return false;\r\n            }\r\n            return true;\r\n        });\r\n        ValidatorForm.addValidationRule('isRequiredPhone', () => {\r\n\r\n            if ((formData.phone.length < 1)) {\r\n                return false;\r\n            }\r\n            return true;\r\n        });\r\n        ValidatorForm.addValidationRule('isRequiredPassword', () => {\r\n\r\n            if ((formData.password.length < 1)) {\r\n                return false;\r\n            }\r\n            return true;\r\n        });\r\n        ValidatorForm.addValidationRule('isRequiredConfirmPassword', () => {\r\n\r\n            if ((formData.confirmpassword.length < 1)) {\r\n\r\n                return false;\r\n            }\r\n            return true;\r\n        });\r\n\r\n        ValidatorForm.addValidationRule('isPasswordMatch', (value) => {\r\n\r\n            if (value !== formData.password) {\r\n                return false;\r\n            }\r\n            return true;\r\n        });\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const history = useHistory();\r\n\r\n    const handleSubmit = () => {\r\n\r\n\r\n        // debugger;\r\n        const newFormObj = { ...formObj, submitted: true };\r\n        setFormObj(newFormObj);\r\n        // , () => {\r\n        //     setTimeout(() => {\r\n        //         this.setFormObj({ submitted: false });\r\n        //         console.log(formData, formObj);\r\n        //     }, 5000);\r\n\r\n        // });\r\n        console.log(formObj, newFormObj)\r\n\r\n        if ((formData.gender === 'male' || formData.gender === 'female') && (formData.checkedA === true)) {\r\n            setTimeout(() => {\r\n                setOpen(!open)\r\n            }, 1000)\r\n\r\n            setTimeout(() => {\r\n                setSuccess(true)\r\n            }, 3000)\r\n\r\n            setTimeout(() => {\r\n                history.push(\"/LoginForm\")\r\n            }, 4000)\r\n        }\r\n        else {\r\n            setNotification(true)\r\n        }\r\n\r\n\r\n\r\n\r\n\r\n\r\n        // console.log(newFormObj, open, formData, formObj);\r\n        // debugger;\r\n    }\r\n\r\n\r\n    // const useStyles = makeStyles((theme) => ({\r\n    //     root: {\r\n    //         '& .MuiTextField-root': {\r\n    //             margin: theme.spacing(1),\r\n    //             width: 200,\r\n    //         },\r\n    //     },\r\n    // }));\r\n\r\n\r\n\r\n    // const handleError = (e) => {\r\n    //     console.log(formObj.formData.name, e);\r\n    //     return false;\r\n    // }\r\n\r\n\r\n    // const { formData } = formObj;\r\n\r\n    const token = localStorage.getItem(\"token\");\r\n\r\n    var loggedIn = true;\r\n\r\n    if (token == null) {\r\n        loggedIn = false\r\n    }\r\n\r\n\r\n    if (loggedIn !== false) {\r\n        return <Redirect to=\"/HomePage\" />\r\n    }\r\n\r\n\r\n\r\n    function getStepContent(stepIndex) {\r\n        switch (stepIndex) {\r\n            case 0:\r\n                return;\r\n            case 1:\r\n                return;\r\n            case 2:\r\n                return '';\r\n            default:\r\n                return '';\r\n        }\r\n    }\r\n\r\n    const step1 = JSON.parse(localStorage.getItem('Data'))\r\n\r\n    // debugger;\r\n    return (\r\n        // <Grid align=\"center\">\r\n        //     <Paper >\r\n        <MDBContainer>\r\n            <MDBRow>\r\n                <MDBCol className=\"FormWrapper registerStep1\">\r\n                    <Grid align='center'>\r\n                        <Avatar style={avatarStyle}>\r\n                            <AddCircleOutlineOutlinedIcon />\r\n                        </Avatar>\r\n                        <h2 style={headerStyle} >Register</h2>\r\n                        <Typography variant='caption' gutterBottom> Please fill this Form! </Typography>\r\n                        <br />\r\n                        <div className={classes.root}>\r\n                            {/* <Stepper activeStep={activeStep} alternativeLabel>\r\n                        {steps.map((label) => (\r\n                            <Step key={label}>\r\n                                <StepLabel>{label}</StepLabel>\r\n                            </Step>\r\n                        ))}\r\n                    </Stepper> */}\r\n                        </div>\r\n\r\n                    </Grid>\r\n\r\n                    <br />\r\n                    <ValidatorForm\r\n                        onSubmit={handleSubmit}\r\n                        noValidate={true}\r\n                    >\r\n\r\n                        <TextValidator fullWidth name=\"name\" type=\"text\"\r\n                            // error={errorFieldName}\r\n                            id=\"name\"\r\n                            label=\"Name\"\r\n                            placeholder=\"Enter Name\"\r\n                            onChange={handleChange}\r\n                            value={step1 ? step1.name : formData.name}\r\n                            validators={['required', 'isRequiredName']}\r\n                            errorMessages={['Required', 'Required']}\r\n                            // defaultValue=\"\"\r\n                            helperText=\"Enter Name\"\r\n                            variant=\"outlined\"\r\n                        // inputProps={{\r\n                        //     invaliderrormessage: \"Please enter organization website.\",\r\n                        //     validatemessage: \"Please enter organization website.\", maxlength: \"100\", minlength: \"0\", mandatory: '0', InputType: \"orgWebsite\",\r\n                        //     'aria-label': \"Please enter organization website.\"\r\n                        // }}\r\n                        // inputProps={{\r\n                        //     // minLength: 2\r\n                        // }}\r\n                        />\r\n\r\n                        <TextValidator fullWidth name=\"email\" type=\"text\"\r\n                            // error={errorFieldEmail}\r\n                            id=\"email\"\r\n                            label=\"Email\"\r\n                            placeholder=\"Enter Email\"\r\n                            onChange={handleChange}\r\n                            value={step1 ? step1.email : formData.email}\r\n                            validators={['required', 'isRequiredEmail', 'isEmail']}\r\n                            errorMessages={['Required', 'Required', 'Enter Valid Email']}\r\n                            helperText=\"Enter Email\"\r\n                            variant=\"outlined\"\r\n\r\n                        />\r\n\r\n                        <br />\r\n                        <div align='left'>\r\n                            <label style={{ color: 'grey' }}>Gender : </label>\r\n                            <input type='radio' name='gender' value='Male' onChange={handleChange} checked={formData.gender === 'Male'} />\r\n                            <label> Male </label>\r\n\r\n                            <input type='radio' name='gender' value='Female' onChange={handleChange} checked={formData.gender === 'Female'} />\r\n                            <label> Female </label>\r\n                        </div>\r\n                        <br />\r\n\r\n                        {/* <FormControl value={step1 ? step1.gender : formData.gender} onChange={handleChange}  component=\"fieldset\"  style={marginTop}>\r\n                        <FormLabel   component=\"legend\">Gender</FormLabel>\r\n                        <RadioGroup aria-label=\"gender\"  checked={formData.gender === step1.gender} name=\"gender\" style={{ display: 'initial' }}>\r\n                            <FormControlLabel  value=\"Female\" control={<Radio />} label=\"Female\" />\r\n                            <FormControlLabel value=\"Male\" control={<Radio />} label=\"Male\" />\r\n                        </RadioGroup>\r\n                    </FormControl> */}\r\n\r\n                        <TextValidator fullWidth name=\"phone\" type=\"number\"\r\n                            // error={errorFieldPhone}\r\n                            id=\"phone\"\r\n                            label=\"Phone Number\"\r\n                            placeholder=\"Enter Phone Number\"\r\n                            onChange={handleChange}\r\n                            value={step1 ? step1.phone : formData.phone}\r\n                            validators={['required', 'isRequiredPhone', 'matchRegexp:^[0-9]{10}$']}\r\n                            errorMessages={['Required', 'Required', 'Enter 10 digit Phone number']}\r\n                            helperText=\"Enter Phone Number\"\r\n                            variant=\"outlined\"\r\n\r\n                        />\r\n\r\n                        <TextValidator fullWidth name=\"password\" type=\"password\"\r\n                            // error={errorFieldPassword}\r\n                            id=\"password\"\r\n                            label=\"Password\"\r\n                            placeholder=\"Enter Password\"\r\n                            onChange={handleChange}\r\n                            value={step1 ? step1.password : formData.password}\r\n                            validators={['required', 'isRequiredPassword']}\r\n                            errorMessages={['Required', 'Required']}\r\n                            helperText=\"Enter Password\"\r\n                            variant=\"outlined\"\r\n\r\n                        />\r\n\r\n                        <TextValidator fullWidth name=\"confirmpassword\" type=\"password\"\r\n                            // error={errorFieldConfirmPassword}\r\n                            id=\"confirmpassword\"\r\n                            label=\"Confirm Password\"\r\n                            placeholder=\"Enter Confirm Password\"\r\n                            onChange={handleChange}\r\n                            value={step1 ? step1.confirmpassword : formData.confirmpassword}\r\n                            validators={['required', 'isRequiredConfirmPassword', 'isPasswordMatch',]}\r\n                            errorMessages={['Required', 'Required', 'Password Mismatch',]}\r\n                            helperText=\"Enter Confirm Password\"\r\n                            variant=\"outlined\"\r\n\r\n                        />\r\n\r\n\r\n\r\n                        <FormControlLabel\r\n                            name=\"remember\"\r\n                            onChange={onCheckChange}\r\n                            checked={formData.checkedA}\r\n                            control={<Checkbox name=\"checkedA\"\r\n                            />}\r\n\r\n                            label=\"I accept the terms and conditions\" />\r\n\r\n                        {/* <Button type=\"Submit\" variant=\"contained\" color='primary'\r\n                        onChange={handleChange}\r\n                        disabled={btn}>Sign Up\r\n                    </Button> */}\r\n\r\n                        <Snackbar\r\n                            anchorOrigin={{\r\n                                vertical: 'top',\r\n                                horizontal: 'center'\r\n                            }}\r\n                            open={notification}\r\n                            autoHideDuration={1000}\r\n                            onClose={handleSnackbar}\r\n                            message='Error'\r\n                            action={\r\n                                <React.Fragment>\r\n                                    <Button onClick={handleSnackbar}>Close</Button>\r\n                                </React.Fragment>\r\n                            } />\r\n                        <Snackbar\r\n                            anchorOrigin={{\r\n                                vertical: 'top',\r\n                                horizontal: 'center'\r\n                            }}\r\n                            open={success}\r\n                            autoHideDuration={3000}\r\n                            onClose={handleSnackbar}\r\n                            message='Success'\r\n                            action={\r\n                                <React.Fragment>\r\n                                    <Button onClick={handleSnackbar}>Close</Button>\r\n                                </React.Fragment>\r\n                            } />\r\n\r\n                        <Backdrop className={classes.backdrop} open={open} onClick={handleClose}>\r\n                            <CircularProgress color=\"inherit\" />\r\n                        </Backdrop>\r\n                    </ValidatorForm>\r\n\r\n\r\n                    <br />\r\n\r\n                    {/* <Stepper data={btn} /> */}\r\n\r\n\r\n                    <div className={classes.root}>\r\n                        {/* <Stepper activeStep={activeStep} alternativeLabel>\r\n                        {steps.map((label) => (\r\n                            <Step key={label}>\r\n                                <StepLabel>{label}</StepLabel>\r\n                            </Step>\r\n                        ))}\r\n                    </Stepper> */}\r\n\r\n                    </div>\r\n\r\n                    <br />\r\n\r\n                    {/* <Link to=\"/LoginForm\" ><span>Already Have a Account?...</span> Log In</Link> */}\r\n\r\n\r\n\r\n\r\n\r\n                </MDBCol>\r\n            </MDBRow>\r\n        </MDBContainer>\r\n        // </Paper>\r\n        // </Grid>\r\n\r\n\r\n    );\r\n\r\n}\r\n\r\nexport default (StepOne);\r\n\r\n\r\n\r\n\r\n","'use strict'\r\nimport React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Button from '@material-ui/core/Button';\r\nimport { Link } from \"react-router-dom\";\r\nimport { Grid, Paper,Avatar } from '@material-ui/core';\r\nimport EmailIcon from '@material-ui/icons/Email';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport PhoneIcon from '@material-ui/icons/Phone';\r\nimport WcIcon from '@material-ui/icons/Wc';\r\nimport { MDBCol, MDBContainer, MDBRow } from 'mdbreact';\r\nimport AddCircleOutlineOutlinedIcon from '@material-ui/icons/AddCircleOutlineOutlined';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  TypoBox: {\r\n    padding: '10px 0',\r\n    borderBottom: '1px solid #ccc',\r\n  },\r\n  root: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing.unit,\r\n    marginLeft: 0,\r\n    marginRight: 0,\r\n    width: '100%',\r\n  },\r\n  optionlabel: {\r\n    marginBottom: '0',\r\n  },\r\n  expandcontent: {\r\n    backgroundColor: '#f5fcfd',\r\n    boxShadow: 'none !important',\r\n    marginTop: '0 !important',\r\n    '&:before': {\r\n      backgroundColor: '#f5fcfd',\r\n    },\r\n  },\r\n  expandbuttonarea: {\r\n    paddingLeft: '0',\r\n    width: '50%',\r\n    fontSize: '15px',\r\n    minHeight: '48px !important',\r\n  },\r\n\r\n  expanddetails: {\r\n    padding: '0',\r\n  },\r\n\r\n  removebg: {\r\n    background: '#ffffff',\r\n    display: 'inline-flex',\r\n    alignItems: 'flex-start',\r\n  },\r\n  dividerCom: {\r\n    flex: '1',\r\n    marginLeft: '57px',\r\n    display: 'none'\r\n  },\r\n  listitems: {\r\n    paddingTop: 20,\r\n    // flexWrap: 'wrap'\r\n\r\n  }\r\n\r\n}));\r\n\r\nexport default function StepThree() {\r\n  const [checked, setChecked] = React.useState(false);\r\n  const [open, setOpen] = React.useState(false);\r\n  const [openPolicyModal, setOpenPolicyModal] = React.useState(false);\r\n\r\n  let data = JSON.parse(localStorage.getItem(\"Data\"));\r\n  let step1 = JSON.parse(localStorage.getItem(\"Data\"));\r\n  data = data ? data : {\r\n    PCName: \"\",\r\n    PCJobTitle: \"\",\r\n    PCEmailAddress: \"\",\r\n    PCPhone: \"\",\r\n    PCFax: \"\",\r\n    SCName: \"\",\r\n    SCJobTitle: \"\",\r\n    SCEmailAddress: \"\",\r\n    SCPhone: \"\",\r\n    SCFax: \"\"\r\n  };\r\n  const handleChange = event => {\r\n    setChecked(event.target.checked);\r\n  };\r\n\r\n\r\n  const handleTermOpen = () => {\r\n    setOpen(true)\r\n  }\r\n\r\n  const handleTermClose = () => {\r\n    setOpen(false)\r\n  }\r\n\r\n  const handleOpenPolicyModal = () => {\r\n    setOpenPolicyModal(true)\r\n  }\r\n\r\n  const handleClosePolicyModal = () => {\r\n    setOpenPolicyModal(false)\r\n  }\r\n  const paperStyle = { padding: '30px 20px ', width: 300, margin: \"20px auto\" }\r\n\r\n  const classes = useStyles();\r\n  \r\n  const avatarStyle = { backgroundColor: 'green' }\r\n  const headerStyle = { margin: 0 }\r\n  return (   \r\n<>\r\n{\r\n                            <>\r\n                            <Grid align=\"center\">\r\n                            <MDBContainer align=\"center\" >\r\n        <MDBRow>\r\n            <MDBCol className=\"FormWrapper registerStep1\">\r\n            <Grid align='center'>\r\n                    <Avatar style={avatarStyle}>\r\n                        <AddCircleOutlineOutlinedIcon />\r\n                    </Avatar>\r\n                    <h2 style={headerStyle} >Review</h2>\r\n                    \r\n                    \r\n                </Grid>\r\n                                <ListItem align=\"center\" >\r\n                                    <ListItemText children={  <>\r\n                                        <ListItemText primary=\"Details\" align='center' />\r\n                                        <br />\r\n                                        <ListItemText primary={<AccountCircleIcon/>}  secondary={\"Name : \" + (step1 ? step1.name : \"\")} />\r\n                                        <br />\r\n                                        <ListItemText primary={<EmailIcon/>} secondary={\"Email : \" + (step1 ? step1.email : \"\")} />\r\n                                        <br />\r\n                                        <ListItemText primary={<WcIcon/>} secondary={\"Gender : \" + (step1 ? step1.gender : \"\")} />\r\n                                        <br />\r\n                                        <ListItemText primary={<PhoneIcon/>} secondary={\"Phone : \" + (step1 ? step1.phone : \"\")} />\r\n                                        <br />\r\n                                    </>} />\r\n                                </ListItem>\r\n                                <br/>\r\n                        \r\n                      \r\n                      \r\n                       \r\n</MDBCol>\r\n                                        </MDBRow>\r\n                                    </MDBContainer>\r\n                                    </Grid>\r\n                            </>\r\n                        }\r\n</>\r\n\r\n  )\r\n}","import React from 'react'\r\n\r\nexport function StepFour() {\r\n    return (\r\n        <div>\r\n            <h1>Succesfully Registered</h1>\r\n            <br/>\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default (StepFour)\r\n","import React, { useState, useEffect } from 'react'\r\nimport Button from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Link } from 'react-router-dom';\r\nimport { useHistory } from 'react-router-dom';\r\nimport {  Snackbar } from '@material-ui/core';\r\nimport Stepper from '@material-ui/core/Stepper';\r\nimport Step from '@material-ui/core/Step';\r\nimport StepLabel from '@material-ui/core/StepLabel';\r\nimport { MDBCol, MDBContainer, MDBRow } from 'mdbreact';\r\nimport StepOne from './step-1';\r\n\r\nimport StepThree from './step-3'\r\n\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport { StepFour } from './step-4';\r\n\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst getNavStyles = (indx, length) => {\r\n    let styles = []\r\n    for (let i = 0; i < length; i++) {\r\n        if (i < indx) {\r\n            styles.push('done')\r\n        } else if (i === indx) {\r\n            styles.push('doing')\r\n        } else {\r\n            styles.push('todo')\r\n        }\r\n    }\r\n    return styles\r\n}\r\n\r\n\r\nfunction getSteps() {\r\n    return ['',''];\r\n}\r\n\r\nconst getButtonsState = (indx, length) => {\r\n    if (indx > 0 && indx < length - 1) {\r\n        return {\r\n            showSecondstep: true,\r\n            showPreviousBtn: true,\r\n            showSubmitBtn: true,\r\n             //showNextBtn: true\r\n\r\n        }\r\n    } else if (indx === 0) {\r\n        return {\r\n            showPreviousBtn: false,\r\n             showNextBtn: true,\r\n            showCancelBtn: true,\r\n            showFirststep: true,\r\n            \r\n        }\r\n    } else {\r\n        return {\r\n            showHomeBtn: true,\r\n            // showSubmitBtn: true,\r\n            showThirdstep: true\r\n        }\r\n    }\r\n    // else{\r\n    //     return {\r\n    //         showPreviousBtn: false,\r\n    //         showSubmitBtn: false,\r\n    //         showThirdstep: false\r\n    //     }\r\n       \r\n    // }\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        width: '100%',\r\n        '& > * + *': {\r\n          marginTop: theme.spacing(2),\r\n        },\r\n      },\r\n    ButtonContained: {\r\n        padding: '6px 35px',\r\n        color: '#ffffff',\r\n        fontSize: '0.875rem',\r\n        display: 'inline-flex',\r\n        alignItems: 'center',\r\n        textTransform: 'uppercase',\r\n        backgroundColor: theme.palette.secondary.main,\r\n        borderRadius: 4,\r\n        \"&:hover\": {\r\n            color: '#ffffff',\r\n            backgroundColor: '#5635b2'\r\n        }\r\n    },\r\n    ButtonOutlined: {\r\n        padding: '8px 35px',\r\n        textTransform: 'uppercase',\r\n        fontSize: '0.875rem',\r\n        display: 'inline-flex',\r\n        alignItems: 'center',\r\n        borderRadius: 4,\r\n        color: theme.palette.secondary.main,\r\n        \"&:hover\": {\r\n            color: '#5635b2',\r\n            backgroundColor: 'transparent'\r\n        }\r\n    }\r\n}));\r\n\r\nexport default function MultiStep(props) {\r\n    const step1 = JSON.parse(localStorage.getItem(\"Data\"));\r\n    const history = useHistory();\r\n    const [stylesState, setStyles] = useState(\r\n        getNavStyles(0, props.steps.length)\r\n    );\r\n    const messageRef = React.useRef(null);\r\n    const [compState, setComp] = useState(0);\r\n    const [loading, setLoading] = useState(false);\r\n    const [currentCustomerNumber, setCurrentCustomerNumber] = useState('');\r\n    const [buttonsState, setButtons] = useState(\r\n        getButtonsState(0, props.steps.length)\r\n    );\r\n    \r\n    \r\n    const [formObj, setFormObj] = React.useState();\r\n    // const [formData , setFormData] = React.useState(step1)\r\n    const [step2 ,setStep2] = useState({});\r\n    const classes = useStyles();\r\n\r\n    const [error, setError] = React.useState(\"\")\r\n    \r\n\r\n    useEffect(() => {\r\n    \r\n       \r\n      \r\n    // debugger;\r\n    const data = JSON.parse(localStorage.getItem('Data'))\r\n    // if(data && data.name !== '')\r\n    // {\r\n    //     setBtn(false)\r\n    // }\r\n    // if(formObj == undefined || formObj == null)\r\n    // {\r\n    //     const step1 = JSON.parse(localStorage.getItem(\"Data\"));\r\n    //     setFormObj(step1)\r\n    // }\r\n   return () => {\r\n   \r\n    localStorage.removeItem('Data')\r\n\r\n\r\n    \r\n}\r\n\r\n\r\n    },[]);\r\n\r\n    // useEffect(() => {\r\n    //     // const step1 = JSON.parse(localStorage.getItem(\"Data\"));\r\n    //     const nextButton = JSON.parse(localStorage.getItem('Button'))\r\n\r\n   \r\n       \r\n    //     });\r\n\r\n  \r\n\r\n    \r\n\r\n    function setStepState(indx) {\r\n        setStyles(getNavStyles(indx, props.steps.length));\r\n        setComp(indx < props.steps.length ? indx : compState);\r\n        setButtons(getButtonsState(indx, props.steps.length));\r\n    }\r\n    \r\n    const [nextBtn,setNextBtn] = useState(true)\r\n    // const btn = true;\r\n    \r\n    // debugger;\r\n    const sendData = (nextBtn) => {\r\n      \r\n    //   console.log(nextBtn,\"multi\")\r\n      setNextBtn(nextBtn)\r\n    }\r\n    const [activeStep, setActiveStep] = React.useState(0);\r\n    const steps = getSteps();\r\n    \r\n    const handleHome = () => {\r\n        setTimeout(() => {\r\n                history2.push(\"/LoginForm\")\r\n                localStorage.removeItem('Data')\r\n                \r\n            }, 3000)\r\n    }\r\n    const next = () => {\r\n        // debugger;\r\n         const step1 = JSON.parse(localStorage.getItem('Data'))\r\n        //  setFormObj(data);\r\n        //  localStorage.setItem('Data',JSON.stringify(formObj))\r\n        //  console.log(data)\r\n        // const data = Object.values(step1)\r\n        // setStep2(step1);\r\n        // console.log(step2)\r\n        // console.log(data)\r\n        // const data = JSON.parse(localStorage.getItem('Data'))\r\n        // // setFormObj(data)\r\n        // localStorage.setItem('Data',JSON.stringify('Data'))\r\n        // debugger;\r\n        if(step1)\r\n        {\r\n            if((step1.name === \"\") || (step1.email === \"\") || (step1.password === \"\") || (step1.confirmpassword === \"\") || (step1.phone === \"\")     )\r\n            {\r\n               setFillFields(true)\r\n               \r\n            }\r\n    \r\n            if ((step1.name !== \"\") && (step1.email !== \"\") && (step1.password !== \"\") && (step1.confirmpassword !== \"\") && (step1.phone !== \"\") && (step1.checkedA === true)  ) {\r\n            \r\n                setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n                setStepState(compState +1);\r\n                setComp(compState+1)\r\n            }\r\n            // if ((step1.name === \"\" ) && (step1.email === \"\") && (step1.password === \"\") && (step1.confirmpassword === \"\") && (step1.phone === \"\")) {\r\n        \r\n            //     setFillFields(true)  \r\n            \r\n            // }\r\n            // else if ((step1.name === \"\"))\r\n            // {\r\n            //     setError(\"Please Enter Name\")\r\n            // } \r\n            // else if ((step1.email === \"\"))\r\n            // {\r\n            //     setError(\"Please Enter Email\")\r\n            // }\r\n            //   else if ((step1.phone === \"\"))\r\n            // {\r\n            //     setError(\"Please Enter Phone\")\r\n            // }\r\n            //  else if ((step1.password === \"\"))\r\n            // {\r\n            //     setError(\"Please Enter Password\")\r\n            // }\r\n            //  else if ((step1.confirmpassword === \"\"))\r\n            // {\r\n            //     setError(\"Please Enter Confirm Password\")\r\n            // }\r\n            // else if (step1.checkedA === false)\r\n            // {\r\n            //     setError(\"Please tick the CheckBox\")\r\n            // }\r\n            // else\r\n            // {\r\n            //     setError(\"\")\r\n            // }\r\n            \r\n             \r\n            \r\n        }\r\n        else\r\n        {\r\n            setFillFields(true)\r\n        }\r\n       \r\n       \r\n            \r\n    };\r\n\r\n    \r\n// debugger;\r\n    const handleChange = (event) => {\r\n       \r\n        // console.log(\"event\", event.target.value);\r\n        // const { formData } = formObj;\r\n       \r\n        // setStep2(step1)\r\n        // console.log(step2)\r\n        // step1[e.target.name] = e.target.value\r\n       \r\n\r\n        // step1[e.target.name] = e.target.value;\r\n        // setStep2({ step1: step1 });\r\n        // formObj[event.target.name] = event.target.value;\r\n        // const data = JSON.parse(localStorage.getItem('Data'))\r\n        // setFormObj(data);\r\n        \r\n        \r\n        // console.log(\"event\", event.target.value);\r\n     \r\n        // if (formObj.name !== '' && formObj.email !== '' && formObj.phone !== '' && formObj.password !== '' && formObj.confirmpassword !== '') {\r\n        //     setBtn(false)\r\n        // }\r\n        // else {\r\n        //     setBtn(true)\r\n        // }\r\n\r\n        // ValidatorForm.addValidationRule('isPasswordMatch', (value) => {\r\n\r\n        //     if (value !== formData.password) {\r\n        //         return false;\r\n        //     }\r\n        //     return true;\r\n        // });\r\n\r\n\r\n    }\r\n\r\n\r\n    const previous = () => {\r\n        // const step1 = JSON.parse(localStorage.getItem('Data'))\r\n        // localStorage.setItem('Data', JSON.stringify(step1))\r\n        setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n        setStepState((compState > 0) ? compState - 1 : compState)\r\n    }\r\n\r\n    const handleKeyDown = (evt) => evt.which === 13 ? next(props.steps.length) : {}\r\n\r\n    const handleOnClick = (evt) => {\r\n        if (evt.currentTarget.value === props.steps.length - 1 && compState === props.steps.length - 1) {\r\n            setStepState(props.steps.length)\r\n        } else {\r\n            setStepState(evt.currentTarget.value)\r\n        }\r\n    }\r\n\r\n    const renderSteps = () =>\r\n        props.steps.map((s, i) => (\r\n            <li\r\n                className={'progtrckrs-' + stylesState[i]}\r\n                onClick={handleOnClick}\r\n                key={i}\r\n                value={i}\r\n            >\r\n                <em>{i + 1}</em>\r\n                <span>{props.steps[i].name}</span>\r\n            </li>\r\n        ))\r\n\r\n    const getValueOrDefault = (val) => {\r\n        if (!val) {\r\n            return \"\";\r\n        }\r\n\r\n        return val + \"; \\n\";\r\n    };\r\n\r\n  const history2 = useHistory();\r\n\r\n    const reset = () => {\r\n        localStorage.removeItem('Data')\r\n       history2.push(\"/LoginForm\")\r\n    }\r\n\r\n    const [notification, setNotification] = React.useState(false);\r\n\r\n    const [success, setSuccess] = React.useState(false);\r\n    const [fillFields, setFillFields] = React.useState(false);\r\n\r\n    const handleSnackbar = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n\r\n        setNotification(false);\r\n        setSuccess(false)\r\n        setFillFields(false)\r\n    }\r\n\r\n    // const handleDisabledButton = (e) => {\r\n\r\n    // }\r\n\r\n    const handleClick = () => {\r\n        \r\n        const step2 = JSON.parse(localStorage.getItem(\"Data\"));\r\n\r\n        if ((step1.gender === 'Male' || step1.gender === 'Female') && (step1.checkedA === true)) {\r\n            \r\n            \r\n            // setTimeout(() => {\r\n            //     history2.push(\"/LoginForm\")\r\n            //     localStorage.removeItem('Data')\r\n                \r\n            // }, 3000)\r\n            setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n                setStepState(compState +1);\r\n                setComp(compState+1)\r\n\r\n            setTimeout(() => {\r\n                setSuccess(true)\r\n            }, 1000)\r\n\r\n            // setComp()\r\n            \r\n\r\n        }\r\n        else {\r\n            \r\n            setNotification(true)\r\n            \r\n        }\r\n    \r\n    }\r\n\r\n    \r\n    const paperStyle = { padding: '30px 20px ', width: 300, margin: \"20px auto\" }\r\n    const nextButton = JSON.parse(localStorage.getItem('Button'))\r\n   \r\n    return (\r\n        // <Grid align=\"center\">\r\n        //     <Paper >\r\n                <MDBContainer align=\"center\">\r\n        <MDBRow>\r\n            <MDBCol className=\"FormWrapper registerStep1\">\r\n                \r\n                <div>\r\n                    <Stepper activeStep={activeStep} alternativeLabel>\r\n                        {steps.map((label) => (\r\n                            <Step key={label}>\r\n                                <StepLabel>{label}</StepLabel>\r\n                            </Step>\r\n                        ))}\r\n                    </Stepper>\r\n                    </div>\r\n                    <div>  \r\n                    {(error !== \"\") ? (<div className=\"error\">{error}</div>) : \"\"}\r\n                    </div>\r\n                    <br/>\r\n                    \r\n                    \r\n        <div className='stepheading' onKeyDown={handleKeyDown}>\r\n           \r\n        {compState === 0 && <StepOne sendData={sendData}/>}\r\n        {compState === 1 && <StepThree/>}\r\n        {compState === 2 && <StepFour/>}\r\n        {/* {compState === 0  ?   <StepOne sendData={sendData}/> : <StepThree/>} */}\r\n            {/* {props.steps[compState].component} */}\r\n            \r\n            <div className=\"paybuttons\" style={props.showNavigation ? {} : { display: 'none' }}>\r\n\r\n                <Button aria-label=\"click here to back\" color=\"secondary\" className={classes.ButtonOutlined}\r\n                    style={buttonsState.showPreviousBtn ? {} : { display: 'none' }}\r\n                    onClick={previous} >\r\n                    Back\r\n        </Button>\r\n\r\n                \r\n                <Button to=\"/\" aria-label=\"click here to Cancel and go to login page\" color=\"secondary\" className={classes.ButtonOutlined}\r\n                    style={buttonsState.showCancelBtn ? {} : { display: 'none' }} onClick={reset}>\r\n                    Cancel\r\n                </Button>\r\n        \r\n                <Button id=\"nextbutton\" aria-label=\"click here to next\" color=\"secondary\" variant=\"contained\" className={classes.ButtonContained}\r\n                    style={buttonsState.showNextBtn ? {} : { display: 'none' }} \r\n                     disabled={nextBtn} \r\n                    onClick={next} >\r\n                    Next\r\n                </Button>\r\n\r\n            \r\n               <Button aria-label=\"click here to submit\" className={classes.ButtonContained} onClick={handleClick}\r\n                    style={buttonsState.showSubmitBtn ? {} : { display: 'none' }}\r\n                \r\n                >\r\n                    Submit\r\n        </Button>\r\n        <Button aria-label=\"click here to submit\" className={classes.ButtonContained} onClick={handleHome}\r\n                    style={buttonsState.showHomeBtn ? {} : { display: 'none' }}\r\n                \r\n                >\r\n                    Home\r\n        </Button>\r\n               \r\n\r\n        \r\n        <Snackbar\r\n                    anchorOrigin={{\r\n                        vertical: 'top',\r\n                        horizontal: 'center'\r\n                    }}\r\n                    open={notification}\r\n                    autoHideDuration={3000}\r\n                    onClose={handleSnackbar}\r\n                    message='Error'\r\n                    action={\r\n                        <React.Fragment>\r\n                            <Button onClick={handleSnackbar}>Close</Button>\r\n                        </React.Fragment>\r\n                    } >\r\n                        <Alert onClose={handleSnackbar} severity=\"error\">\r\n                        There is some Error in the form\r\n        </Alert>\r\n                        </Snackbar>\r\n           \r\n\r\n                <Snackbar\r\n                    anchorOrigin={{\r\n                        vertical: 'top',\r\n                        horizontal: 'center'\r\n                    }}\r\n                    open={success}\r\n                    autoHideDuration={3000}\r\n                    onClose={handleSnackbar}\r\n                    // message='Success'\r\n                    action={\r\n                        <React.Fragment>\r\n                            <Button onClick={handleSnackbar}>Close</Button>\r\n                        </React.Fragment>\r\n                    } >\r\n                        <Alert onClose={handleSnackbar} severity=\"success\">\r\n                        Successfully Registered\r\n        </Alert>\r\n                        </Snackbar>\r\n\r\n                    <Snackbar\r\n                    anchorOrigin={{\r\n                        vertical: 'top',\r\n                        horizontal: 'center'\r\n                    }}\r\n                    open={fillFields}\r\n                    autoHideDuration={3000}\r\n                    onClose={handleSnackbar}\r\n                    // message='Please Fill All Mandatory Fields'\r\n                    action={\r\n                        <React.Fragment>\r\n                            <Button onClick={handleSnackbar}>Close</Button>\r\n                        </React.Fragment>\r\n                    } >\r\n                        <Alert onClose={handleSnackbar} severity=\"warning\">\r\n                        Please Fill All Mandatory Fields\r\n        </Alert>\r\n                        </Snackbar>\r\n\r\n\r\n\r\n            </div>\r\n            <br/>\r\n            \r\n            <div>\r\n            <Link to=\"/LoginForm\" ><span>Already Have a Account?...</span> Log In</Link>\r\n            </div>\r\n            \r\n\r\n\r\n            \r\n        </div>\r\n                     \r\n\r\n</MDBCol>\r\n                                        </MDBRow>\r\n                                    </MDBContainer>\r\n        // {/* </Paper>\r\n        // </Grid> */}\r\n    );\r\n}\r\n\r\nMultiStep.defaultProps = {\r\n    showNavigation: true\r\n}","import React,{useState} from 'react'\r\nimport StepOne from './step-1'\r\n// import StepTwo from './step-2'\r\nimport StepThree from './step-3'\r\nimport StepFour from './step-4'\r\n// // debugger;\r\n// const StepMain = () =>\r\n// {\r\n//   const [btn,setBtn] = useState()\r\n//   // debugger;\r\n//   const sendData = (btn) =>{\r\n//     console.log(btn)\r\n//     setBtn(btn)\r\n//   }\r\n// }\r\n// // // debugger;\r\nconst steps = \r\n    [\r\n      {name: 'Step 1:  Enter Agency Information', component: <StepOne  />},\r\n      // {name: 'Step 2: Enter Contact Information', component: <StepTwo/>},\r\n      {name: 'Step 3: Review & Confirm', component: <StepThree/>},\r\n      {name: 'Successfull', component: <StepFour/>},\r\n    ]\r\n\r\n\r\n\r\n\r\n\r\nexport  {steps}","import React, { useState, useEffect } from 'react'\r\nimport MultiStep from './Multi';\r\nimport {steps} from './Stepmain';\r\nimport StepOne from './step-1'\r\n\r\n\r\n\r\nconst Stepper = (props) => {\r\n  \r\n  //  useEffect(() => {\r\n  //   console.log(props.data)\r\n  //  },[])\r\n  // const [btn,setBtn] = useState(true)\r\n  // // debugger;\r\n  // const sendData = (btn) => {\r\n  //   console.log(btn)\r\n  //   setBtn(btn)\r\n  // }\r\n        return (\r\n          <div className=\"containerWra\">\r\n              <MultiStep   steps={steps}/>\r\n              \r\n          </div>\r\n        )\r\n              \r\n}\r\n\r\nexport default Stepper;\r\n","import React from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\n// import Typography from '@material-ui/core/Typography';\r\nimport HorizontalLabelPositionBelowStepper from './Stepper';\r\n// import { Grid,  Avatar, Button, TextField } from '@material-ui/core';\r\n// import { useState } from 'react';\r\n// import StepOne from './step-1'\r\nimport {Grid} from '@material-ui/core'\r\n\r\n\r\nexport default function Register() {\r\n  // const [btn,setBtn] = useState(true)\r\n  // // debugger;\r\n  // const sendData = (btn) => {\r\n  //   console.log(btn)\r\n  //   setBtn(btn)\r\n  // }\r\n  const paperStyle = { padding: '30px 20px ', width: 300, margin: \"20px auto\" }\r\n  return (\r\n    <Grid>\r\n              <Paper elevation={10} style={paperStyle} className=\"ShortPaper\">\r\n                <div className=\"billingpayarea regisFooterBtn\" role=\"region\" aria-label=\"Registration\">\r\n                  <HorizontalLabelPositionBelowStepper />\r\n                </div>\r\n              </Paper>\r\n          </Grid>\r\n       \r\n  );\r\n}","import React from 'react';\r\nimport { useState, useEffect } from 'react';\r\nimport { Avatar, Button, Grid, Paper, TextField } from '@material-ui/core';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport { Link, Redirect, withRouter } from 'react-router-dom';\r\n\r\n\r\nimport { useHistory } from 'react-router-dom';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport LockOpenIcon from '@material-ui/icons/LockOpen';\r\nimport Dynamic from '../DynamicData/Dynamic.json';\r\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator';\r\n\r\n\r\n\r\nconst DynamicForm = () => {\r\n\r\n    const paperStyle = { backgroundColor: 'white', padding: 20, height: '70vh', width: 280, margin: \"20px auto\" };\r\n    const [data, setData] = useState(null)\r\n    const [error, setError] = useState(false)\r\n    const [formObj, setFormObj] = useState(\r\n        {\r\n                text: '',\r\n                number: ''\r\n        }\r\n    )\r\n    // const { formData } = formObj\r\n    useEffect(() => {\r\n        \r\n        setData(Dynamic)\r\n\r\n\r\n        console.log(data)\r\n    });\r\n\r\n    const history = useHistory();\r\n\r\n    const handleSubmit = () => {\r\n     \r\n        \r\n    \r\n       \r\n       \r\n           \r\n         history.push('/LoginForm')\r\n    }\r\n   \r\n\r\n    const handleChange = (event) => {\r\n      \r\n        // formObj[event.target.name] = event.target.value;\r\n        setFormObj({...formObj, [event.target.name] : event.target.value} )\r\n         console.log(formObj)\r\n\r\n        //   debugger\r\n         Dynamic.map(form => {\r\n             return(\r\n                ValidatorForm.addValidationRule('minLength', () => {\r\n                    if ((form.type === 'text' ? formObj.text.length.toString() < form.validation.minLength : '' )) {\r\n                        return false;\r\n                    }\r\n                    return true;\r\n                })\r\n                // ValidatorForm.addValidationRule('requiredField', () => {\r\n                //     if ((formObj.text !== form.validation.isRequired )) {\r\n                //         return false;\r\n                //     }\r\n                //     return true;\r\n                // })\r\n \r\n\r\n\r\n             )\r\n         })\r\n        \r\n\r\n\r\n       \r\n    }\r\n\r\n    const handleCancel = () => {\r\n        history.push(\"/LoginForm\")\r\n    }\r\n    return (\r\n        <>\r\n            <Grid>\r\n                <Paper elevation={10} style={paperStyle}>\r\n\r\n                    <Grid align='center'>\r\n                        <Avatar style={{\r\n                            background: 'green'\r\n                        }}><LockOpenIcon /></Avatar>\r\n                        <h2> Form </h2>\r\n                    </Grid>\r\n\r\n                    \r\n\r\n                    <ValidatorForm\r\n                        onSubmit={handleSubmit}\r\n                        noValidate={true}\r\n                    >\r\n                        {Dynamic.map(form => {\r\n                            return (\r\n                                \r\n                                <>\r\n                                \r\n                                    <TextValidator\r\n                                    \r\n                                    name={form.type}\r\n                                    onChange={handleChange}\r\n                                    value = {form.type ==='text' ? formObj.text : formObj.number}\r\n                                        label={form.labelName}\r\n                                        placeholder={form.placeholder}\r\n                                        // required={form.validation.isRequired}\r\n                                        validators={['requiredField','minLength']}\r\n                                        errorMessages={['Required', 'Minimum length is 3']}\r\n                                        type={form.type}\r\n                                        \r\n                                        fullWidth />\r\n                                    <br />\r\n\r\n                                </>\r\n\r\n                            )\r\n                        })}\r\n\r\n                        <br />\r\n                        <Button onClick={handleCancel} color='Red' variant=\"outlined\" >\r\n                            Cancel\r\n                        </Button>\r\n                        &nbsp;\r\n                        <Button type='submit' color='primary' variant=\"contained\" >\r\n                            Submit\r\n                        </Button>\r\n\r\n\r\n\r\n                    </ValidatorForm>\r\n\r\n                    {/* <ValidatorForm\r\n                        onSubmit={handleSubmit}\r\n                        noValidate={true}\r\n                    >\r\n                                  <TextValidator\r\n                                  id=\"name\"\r\n                                \r\n                                    onChange={handleChange}\r\n                                    // value ={formData.name}\r\n                                        type={data ? data[0].type : '' }\r\n                                        label={data ? data[0].labelName : ''}\r\n                                        placeholder={data ? data[0].placeholder : ''}\r\n                                        required={data ? data[0].validation.isRequired :''}\r\n                                        // validators={['requiredField']}\r\n                                        // errorMessages={['Required']}\r\n                                     fullWidth\r\n                                    />\r\n                                    <br/>\r\n                                     <TextValidator\r\n                                     id=\"phone\"\r\n                                    //  value ={formData ? formData.phone : ''}\r\n                                    // onChange={handleChange}\r\n                                        type={data ? data[1].type : '' }\r\n                                        label={data ? data[1].labelName : ''}\r\n                                        placeholder={data ? data[1].placeholder : ''}\r\n                                       //validators={[data[1].validation.isRequired === true ? '' : 'required','matchRegexp:^[0-9]{10}$']}\r\n                                        errorMessages={['Required','Minimum Length 3']}\r\n                                     fullWidth\r\n                                    />\r\n                            <br /> */}\r\n                    {/* <br/>\r\n                            <Button onClick={handleCancel}  color='Red' variant=\"outlined\" >\r\n                                Cancel\r\n                            </Button>\r\n                            &nbsp;\r\n                            <Button type='submit'  color='primary' variant=\"contained\" >\r\n                                Submit\r\n                            </Button>\r\n                            </form>\r\n\r\n                        \r\n                    </ValidatorForm> */}\r\n\r\n\r\n\r\n\r\n                </Paper>\r\n            </Grid>\r\n        </>\r\n    )\r\n}\r\nexport default (DynamicForm)","import React from 'react';\nimport LoginForm from './Components/LoginForm'\nimport SignUp from './Components/SignUp';\nimport {BrowserRouter as Router,Route, Switch} from 'react-router-dom';\nimport Nav from './Components/Nav';\nimport ErrorPage from './Components/ErrorPage';\nimport HomePage  from './Components/HomePage';\nimport ProtectedRoute from './Components/ProtectedRoute';\nimport AddUser from './Components/users/AddUser';\nimport EditUser from './Components/users/EditUser';\nimport Roles from './Components/Roles';\nimport AddRoles from './Components/AddRoles';\nimport EditRoles from './Components/EditRoles';\nimport NewData from './Components/NewData';\nimport Register from './Components/Register';\nimport DynamicForm from './Components/dynamic-form';\n\n\n\n\n\n\nfunction App() {\n\n  // const adminUser = {\n  //   name : \"Shivam\",\n  //   email : \"shivam@gmail.com\",\n  //   password : \"shivam\"\n  // };\n\n  // const [user, setUser] = useState({name: \"\", email:\"\"});\n  // const [error, setError] = useState(\"\");\n\n  // const Login = details => {\n  //   console.log(details);\n\n  //   if(details.email === adminUser.email && details.password === adminUser.password)\n  //   {\n  //     console.log(\"Logged In\");\n  //     setUser({\n  //       name : details.name,\n  //       email : details.email\n  //     });\n  //   }\n  //   else\n  //   {\n  //     setError(\"Details do no match!\");\n  //   }\n  // }\n\n  // const Logout = () => {\n    \n  //   setUser({email: \"\", password:\"\"})\n  //   window.location.reload();\n    \n  // }\n\n  // const paperStyle = {backgroundColor: '#f6f6f6', padding : 20, height : '70vh', width: 280, margin:\"20px auto\"}\n  // const avatarStyle ={backgroundColor : 'green'}\n \n   \n  return (\n    \n    <>\n    <Router>\n      <Nav/>\n      <Switch> \n      <Route exact path=\"/\" component={LoginForm}/>\n      <Route exact path=\"/SignUp\" component={SignUp} />\n      <Route exact path=\"/LoginForm\" component={LoginForm}/>\n      \n      <Route exact path=\"/users/AddUser\" component={AddUser}></Route>\n      <Route exact path=\"/AddRoles\" component={AddRoles}></Route>\n      <Route exact path=\"/Register\" component={Register}></Route>\n      <Route exact path=\"/NewData\" component={NewData}></Route>\n      <Route exact path=\"/dynamic-form\" component={DynamicForm}></Route>\n      \n      \n      \n      \n      \n\n      \n      <Route exact path=\"/EditRoles/:id\" component={EditRoles}></Route>\n      <Route exact path=\"/users/EditUser/:id\" component={EditUser}></Route>\n      <ProtectedRoute exact path=\"/HomePage\" component={HomePage} />\n\n      <Route exact path=\"/Roles\" component={Roles}/>\n      \n      \n      <Route component={ErrorPage}/>\n\n      </Switch>\n    \n  \n    {/* <div className=\"App\">\n   {(user.email !== \"\") ? (\n     <div className=\"welcome\">\n       <Grid align='center'>\n         <Paper elevation={10} style={paperStyle}>\n         <Avatar style={avatarStyle}><LockOpenOutlinedIcon/></Avatar>\n         <h3>Logged In </h3>\n       <h2>Hi, <span>{adminUser.name}</span> </h2>\n       <Button color='primary' variant=\"contained\"  onClick={Logout}>Logout</Button>\n       </Paper>\n       </Grid>\n     </div>\n     \n\n   ) : (\n    <LoginForm Login={Login} error={error}/>\n    \n    \n   )}\n    </div> */}\n    </Router>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}